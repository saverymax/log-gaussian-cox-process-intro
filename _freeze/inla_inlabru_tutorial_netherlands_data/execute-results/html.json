{
  "hash": "9a46d5de368c064a98d8ea5dddf21fc6",
  "result": {
    "markdown": "\n# Spatial modelling with INLA and SPDE\n\nHaving covered the need-to-know material for INLA and SPDE, next I'm going to build a spatial model using both ```INLA``` and ```inlabru```. Comparing the two packages is useful because, though they can be expected to give the same results in most cases, the implementation is a bit different. Knowing when using the more complicated ```INLA``` can be justified is a useful exercise, I think. \n\nI found <https://becarioprecario.bitbucket.io/spde-gitbook/ch-lcox.html> and <https://becarioprecario.bitbucket.io/inla-gitbook/ch-INLA.html> good for details about inla and such specifications. However, this initial tutorial follows that of the book of Paula Moraga <https://www.paulamoraga.com/book-spatial/sec-geostatisticaldataSPDE.html>, because I found her writing a bit more concise and clear. \n\nThe model fit here is a simple geostatistical one:\n$$\nY_i \\sim N(u_i, \\sigma^2)\\\\\nu_i = \\beta_0\\cdot\\text{temp} + \\beta_1\\cdot\\text{precipitation}_i + S(x_i).\n$$\nSo it's a typical Gaussian distributed variable with underlying latent structure. I'm not sure what the most accurate statistical way to say this is; potentially a spatial random effect \"modelled as a Gaussian process\". This is what Paula Moraga calls \"geostatistical data\", that is, measurements taken at discrete locations but used to describe or estimate a spatially continuous process, such as air pollution. It is very similar to a mixed model with a random effect. In this case the random effect is Gaussian distributed and spatially indexed. \n\nIt's a simple model, so let's get straight to data downloading and processing. I download air pollution data in the Netherlands for the year of 2023 from <https://eeadmz1-downloads-webapp.azurewebsites.net/>.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(INLA)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Matrix\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is INLA_24.05.01-1 built 2024-05-01 18:49:50 UTC.\n - See www.r-inla.org/contact-us for how to get help.\n - List available models/likelihoods/etc with inla.list.models()\n - Use inla.doc(<NAME>) to access documentation\n```\n:::\n\n```{.r .cell-code}\nlibrary(inlabru)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: fmesher\n```\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.2, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(ggplot2)\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: viridisLite\n```\n:::\n\n```{.r .cell-code}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nterra 1.7.78\n```\n:::\n\n```{.r .cell-code}\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'arrow'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:terra':\n\n    buffer\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:terra':\n\n    intersect, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(readr)\n#data_path <- file.path(\"D:\", \"data\", \"air_quality_data\", \"belgium_eea\", \"E1a\")\ndata_path <- file.path(\"D:\", \"data\", \"air_quality_data\", \"netherlands_eea\", \"E1a\")\nd <- open_dataset(data_path)\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFileSystemDataset with 199 Parquet files\n12 columns\nSamplingpoint: string\nPollutant: int32\nStart: timestamp[ns] not null\nEnd: timestamp[ns] not null\nValue: decimal128(38, 18)\nUnit: string\nAggType: string\nValidity: int32 not null\nVerification: int32 not null\nResultTime: timestamp[ns] not null\nDataCapture: decimal128(38, 18)\nFkObservationLog: string\n```\n:::\n\n```{.r .cell-code}\n# 8\tNitrogen dioxide\n# 5\tParticulate matter < 10 µm\n# 6001\tParticulate matter < 2.5 µm\nd %>% group_by(Samplingpoint) |> filter(Pollutant==6001, Value>-1) |> collect() -> df\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 442,873 × 12\n# Groups:   Samplingpoint [53]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n   <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 NL/SPO-NL00007…      6001 2023-01-01 01:00:00 2023-01-01 02:00:00 131.  ug.m…\n 2 NL/SPO-NL00007…      6001 2023-01-01 02:00:00 2023-01-01 03:00:00  86.2 ug.m…\n 3 NL/SPO-NL00007…      6001 2023-01-01 03:00:00 2023-01-01 04:00:00  30.7 ug.m…\n 4 NL/SPO-NL00007…      6001 2023-01-01 04:00:00 2023-01-01 05:00:00  11   ug.m…\n 5 NL/SPO-NL00007…      6001 2023-01-01 05:00:00 2023-01-01 06:00:00   9.1 ug.m…\n 6 NL/SPO-NL00007…      6001 2023-01-01 06:00:00 2023-01-01 07:00:00   5.3 ug.m…\n 7 NL/SPO-NL00007…      6001 2023-01-01 07:00:00 2023-01-01 08:00:00   2.8 ug.m…\n 8 NL/SPO-NL00007…      6001 2023-01-01 08:00:00 2023-01-01 09:00:00   2.3 ug.m…\n 9 NL/SPO-NL00007…      6001 2023-01-01 10:00:00 2023-01-01 11:00:00  -0.6 ug.m…\n10 NL/SPO-NL00007…      6001 2023-01-01 11:00:00 2023-01-01 12:00:00   1.4 ug.m…\n# ℹ 442,863 more rows\n# ℹ 6 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>\n```\n:::\n:::\n\nAdd locations to the sampling stations.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 442,873 × 12\n# Groups:   Samplingpoint [53]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n   <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 NL/SPO-NL00007…      6001 2023-01-01 01:00:00 2023-01-01 02:00:00 131.  ug.m…\n 2 NL/SPO-NL00007…      6001 2023-01-01 02:00:00 2023-01-01 03:00:00  86.2 ug.m…\n 3 NL/SPO-NL00007…      6001 2023-01-01 03:00:00 2023-01-01 04:00:00  30.7 ug.m…\n 4 NL/SPO-NL00007…      6001 2023-01-01 04:00:00 2023-01-01 05:00:00  11   ug.m…\n 5 NL/SPO-NL00007…      6001 2023-01-01 05:00:00 2023-01-01 06:00:00   9.1 ug.m…\n 6 NL/SPO-NL00007…      6001 2023-01-01 06:00:00 2023-01-01 07:00:00   5.3 ug.m…\n 7 NL/SPO-NL00007…      6001 2023-01-01 07:00:00 2023-01-01 08:00:00   2.8 ug.m…\n 8 NL/SPO-NL00007…      6001 2023-01-01 08:00:00 2023-01-01 09:00:00   2.3 ug.m…\n 9 NL/SPO-NL00007…      6001 2023-01-01 10:00:00 2023-01-01 11:00:00  -0.6 ug.m…\n10 NL/SPO-NL00007…      6001 2023-01-01 11:00:00 2023-01-01 12:00:00   1.4 ug.m…\n# ℹ 442,863 more rows\n# ℹ 6 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>\n```\n:::\n\n```{.r .cell-code}\ndf <- df %>%\n   #mutate(Samplingpoint = str_remove(Samplingpoint, \"BE/\"))\n   mutate(Samplingpoint = str_remove(Samplingpoint, \"NL/\"))\n#station_location_path <- file.path(\"D:\", \"data\", \"air_quality_data\", \"eea_stations_2023\", \"belgium_stations_2023.csv\")\nstation_location_path <- file.path(\"D:\", \"data\", \"air_quality_data\", \"eea_stations_2023\", \"nl_stations_2023.csv\")\nstation_locations <- read_csv(station_location_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 4685 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (19): Country, Air Quality Network, Air Quality Network Name, Air Qualit...\ndbl  (8): Year, Air Pollution Level, Data Coverage, Verification, Longitude,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstation_locations <- rename(station_locations, Samplingpoint = 'Sampling Point Id')\nstation_locations %>% \n  distinct(Samplingpoint, Longitude, Latitude) -> unique_locations\nmerged_df <- df %>% \n  left_join(unique_locations %>% select(Samplingpoint, Longitude, Latitude), by = \"Samplingpoint\")\nmerged_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 442,873 × 14\n# Groups:   Samplingpoint [53]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n   <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 SPO-NL00007_06…      6001 2023-01-01 01:00:00 2023-01-01 02:00:00 131.  ug.m…\n 2 SPO-NL00007_06…      6001 2023-01-01 02:00:00 2023-01-01 03:00:00  86.2 ug.m…\n 3 SPO-NL00007_06…      6001 2023-01-01 03:00:00 2023-01-01 04:00:00  30.7 ug.m…\n 4 SPO-NL00007_06…      6001 2023-01-01 04:00:00 2023-01-01 05:00:00  11   ug.m…\n 5 SPO-NL00007_06…      6001 2023-01-01 05:00:00 2023-01-01 06:00:00   9.1 ug.m…\n 6 SPO-NL00007_06…      6001 2023-01-01 06:00:00 2023-01-01 07:00:00   5.3 ug.m…\n 7 SPO-NL00007_06…      6001 2023-01-01 07:00:00 2023-01-01 08:00:00   2.8 ug.m…\n 8 SPO-NL00007_06…      6001 2023-01-01 08:00:00 2023-01-01 09:00:00   2.3 ug.m…\n 9 SPO-NL00007_06…      6001 2023-01-01 10:00:00 2023-01-01 11:00:00  -0.6 ug.m…\n10 SPO-NL00007_06…      6001 2023-01-01 11:00:00 2023-01-01 12:00:00   1.4 ug.m…\n# ℹ 442,863 more rows\n# ℹ 8 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>,\n#   Longitude <dbl>, Latitude <dbl>\n```\n:::\n\n```{.r .cell-code}\nstation_locations_sf <- st_as_sf(station_locations, coords = c(\"Longitude\", \"Latitude\"))\nair_sf <- st_as_sf(merged_df, coords = c(\"Longitude\", \"Latitude\"))\nst_crs(air_sf) <- \"EPSG:4326\"\nair_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 442873 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3.8386 ymin: 50.888 xmax: 6.9195 ymax: 53.3304\nGeodetic CRS:  WGS 84\n# A tibble: 442,873 × 13\n# Groups:   Samplingpoint [53]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n * <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 SPO-NL00007_06…      6001 2023-01-01 01:00:00 2023-01-01 02:00:00 131.  ug.m…\n 2 SPO-NL00007_06…      6001 2023-01-01 02:00:00 2023-01-01 03:00:00  86.2 ug.m…\n 3 SPO-NL00007_06…      6001 2023-01-01 03:00:00 2023-01-01 04:00:00  30.7 ug.m…\n 4 SPO-NL00007_06…      6001 2023-01-01 04:00:00 2023-01-01 05:00:00  11   ug.m…\n 5 SPO-NL00007_06…      6001 2023-01-01 05:00:00 2023-01-01 06:00:00   9.1 ug.m…\n 6 SPO-NL00007_06…      6001 2023-01-01 06:00:00 2023-01-01 07:00:00   5.3 ug.m…\n 7 SPO-NL00007_06…      6001 2023-01-01 07:00:00 2023-01-01 08:00:00   2.8 ug.m…\n 8 SPO-NL00007_06…      6001 2023-01-01 08:00:00 2023-01-01 09:00:00   2.3 ug.m…\n 9 SPO-NL00007_06…      6001 2023-01-01 10:00:00 2023-01-01 11:00:00  -0.6 ug.m…\n10 SPO-NL00007_06…      6001 2023-01-01 11:00:00 2023-01-01 12:00:00   1.4 ug.m…\n# ℹ 442,863 more rows\n# ℹ 7 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>,\n#   geometry <POINT [°]>\n```\n:::\n:::\n\nThen examine the time series\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct_stations <- unique(air_sf$Samplingpoint)[1:12]\nplotting_stations <- air_sf[air_sf$Samplingpoint%in%distinct_stations,]\nplotting_stations\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 98311 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4.781 ymin: 50.888 xmax: 5.9869 ymax: 52.394\nGeodetic CRS:  WGS 84\n# A tibble: 98,311 × 13\n# Groups:   Samplingpoint [12]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n   <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 SPO-NL00007_06…      6001 2023-01-01 01:00:00 2023-01-01 02:00:00 131.  ug.m…\n 2 SPO-NL00007_06…      6001 2023-01-01 02:00:00 2023-01-01 03:00:00  86.2 ug.m…\n 3 SPO-NL00007_06…      6001 2023-01-01 03:00:00 2023-01-01 04:00:00  30.7 ug.m…\n 4 SPO-NL00007_06…      6001 2023-01-01 04:00:00 2023-01-01 05:00:00  11   ug.m…\n 5 SPO-NL00007_06…      6001 2023-01-01 05:00:00 2023-01-01 06:00:00   9.1 ug.m…\n 6 SPO-NL00007_06…      6001 2023-01-01 06:00:00 2023-01-01 07:00:00   5.3 ug.m…\n 7 SPO-NL00007_06…      6001 2023-01-01 07:00:00 2023-01-01 08:00:00   2.8 ug.m…\n 8 SPO-NL00007_06…      6001 2023-01-01 08:00:00 2023-01-01 09:00:00   2.3 ug.m…\n 9 SPO-NL00007_06…      6001 2023-01-01 10:00:00 2023-01-01 11:00:00  -0.6 ug.m…\n10 SPO-NL00007_06…      6001 2023-01-01 11:00:00 2023-01-01 12:00:00   1.4 ug.m…\n# ℹ 98,301 more rows\n# ℹ 7 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>,\n#   geometry <POINT [°]>\n```\n:::\n\n```{.r .cell-code}\nplotting_stations %>% \n  ggplot(aes(x=Start, y=Value)) + \n    geom_line() + \n    facet_wrap(~ Samplingpoint) +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n    labs(title = \"Time series of monitoring stations\", x = \"Time, hourly\", y = \"Conc (μg/m³)\")\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/plot-time-series-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nair_sf <- air_sf %>% filter(Start==as.POSIXct(\"2023-01-01 16:00:00\t\"))\ndim(air_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 52 13\n```\n:::\n\n```{.r .cell-code}\nair_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 52 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3.8386 ymin: 50.888 xmax: 6.9195 ymax: 53.3304\nGeodetic CRS:  WGS 84\n# A tibble: 52 × 13\n# Groups:   Samplingpoint [52]\n   Samplingpoint   Pollutant Start               End                 Value Unit \n * <chr>               <int> <dttm>              <dttm>              <dbl> <chr>\n 1 SPO-NL00007_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  4.4  ug.m…\n 2 SPO-NL00012_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  2.9  ug.m…\n 3 SPO-NL00014_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  3.8  ug.m…\n 4 SPO-NL00016_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  8    ug.m…\n 5 SPO-NL00017_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  3.5  ug.m…\n 6 SPO-NL00131_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  8.21 ug.m…\n 7 SPO-NL00136_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  1.16 ug.m…\n 8 SPO-NL00230_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  2.98 ug.m…\n 9 SPO-NL00240_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  2.17 ug.m…\n10 SPO-NL00241_06…      6001 2023-01-01 16:00:00 2023-01-01 17:00:00  6.33 ug.m…\n# ℹ 42 more rows\n# ℹ 7 more variables: AggType <chr>, Validity <int>, Verification <int>,\n#   ResultTime <dttm>, DataCapture <dbl>, FkObservationLog <chr>,\n#   geometry <POINT [°]>\n```\n:::\n:::\n\n\nThen let's load a map of the Netherlands. The border is from <https://service.pdok.nl/kadaster/bestuurlijkegrenzen/atom/bestuurlijke_grenzen.xml>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <- st_read(file.path(\"D:\", \"data\", \"maps\", \"netherlands_bestuurlijkegrenzen_2021\", \"bestuurlijkegrenzen.gpkg\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMultiple layers are present in data source D:\\data\\maps\\netherlands_bestuurlijkegrenzen_2021\\bestuurlijkegrenzen.gpkg, reading layer `gemeenten'.\nUse `st_layers' to list all layer names and their type in a data source.\nSet the `layer' argument in `st_read' to read a particular layer.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, :\nautomatically selected the first layer in a data source containing more than\none.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `gemeenten' from data source \n  `D:\\data\\maps\\netherlands_bestuurlijkegrenzen_2021\\bestuurlijkegrenzen.gpkg' \n  using driver `GPKG'\nSimple feature collection with 352 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 10425.16 ymin: 306846.2 xmax: 278026.1 ymax: 621876.3\nProjected CRS: Amersfoort / RD New\n```\n:::\n\n```{.r .cell-code}\nmap <- st_union(map)\nmap <- st_as_sf(map)\nmap <- st_transform(map, crs = st_crs(air_sf))\n# raster grid covering map\ngrid <- terra::rast(map, nrows = 100, ncols = 100)\ngrid\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatRaster \ndimensions  : 100, 100, 1  (nrow, ncol, nlyr)\nresolution  : 0.03919561, 0.02826056  (x, y)\nextent      : 3.307938, 7.227498, 50.75037, 53.57642  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \n```\n:::\n\n```{.r .cell-code}\n# coordinates of all cells\nxy <- terra::xyFromCell(grid, 1:ncell(grid))\n# transform points to a sf object\ndp <- st_as_sf(as.data.frame(xy), coords = c(\"x\", \"y\"),\n                 crs = st_crs(map))\n\n# indices points within the map\nindicespointswithin <- which(st_intersects(dp, map,\n                                           sparse = FALSE))\nlength(indicespointswithin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4944\n```\n:::\n\n```{.r .cell-code}\n# points within the map\ndp <- st_filter(dp, map)\n\n# plot\nggplot() + geom_sf(data = map) +\n  geom_sf(data = dp)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-maps-1.png){width=672}\n:::\n:::\n\nMore data process\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geodata)\n# With geodata library\nsave_path <- file.path(\"D:\", \"data\", \"air_quality_data\", \"aux_variables\")\ncovtemp <- worldclim_global(var = \"tavg\", res = 10,\n                            path = save_path)\ncovprec <- worldclim_global(var = \"prec\", res = 10,\n                            path = save_path)\n# Extract at observed locations\nair_sf$covtemp <- extract(mean(covtemp), st_coordinates(air_sf))[, 1]\nair_sf$covprec <- extract(mean(covprec), st_coordinates(air_sf))[, 1]\n# Extract at prediction locations\ndp$covtemp <- extract(mean(covtemp), st_coordinates(dp))[, 1]\ndp$covprec <- extract(mean(covprec), st_coordinates(dp))[, 1]\ndp$covprec\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   [1] 67.08333 67.08333 67.58333 67.58333 67.58333 67.58333 67.58333 67.08333\n   [9] 67.08333 67.08333 67.08333 67.58333 67.58333 67.58333 67.58333 67.58333\n  [17] 65.25000       NA 66.08333 66.08333 66.08333 66.08333 67.08333 67.08333\n  [25] 67.08333 67.08333 67.58333 67.58333 67.58333 67.58333 67.58333 65.25000\n  [33] 65.25000 65.25000 66.08333 66.08333 68.16667 68.16667 68.16667 68.16667\n  [41] 68.16667 68.16667 68.16667 68.16667 66.83333 66.83333 66.83333 66.83333\n  [49] 67.41667 67.41667 67.41667 67.41667 69.08333 69.08333 69.08333 69.08333\n  [57] 69.08333 67.91667 67.91667 67.91667 67.91667 66.33333 66.08333 66.08333\n  [65] 66.08333 66.08333 68.08333 68.08333 68.08333 68.08333 68.16667 68.16667\n  [73] 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 66.83333\n  [81] 66.83333 66.83333 66.83333 67.41667 67.41667 67.41667 67.41667 69.08333\n  [89] 69.08333 69.08333 69.08333 69.08333 67.91667 67.91667 67.91667 67.91667\n  [97] 65.00000 65.00000 66.25000 66.25000 66.33333 66.33333 66.33333 66.33333\n [105] 66.08333 66.08333 66.08333 66.08333 68.08333 68.08333 68.08333 68.08333\n [113] 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667\n [121] 68.16667 66.83333 66.83333 66.83333 66.83333 67.41667 67.41667 67.41667\n [129] 67.41667 69.08333 69.08333 69.08333 69.08333 69.08333 67.91667 67.91667\n [137] 67.91667 67.91667 65.00000 65.00000 65.00000 66.25000 66.25000 66.25000\n [145] 66.25000 66.25000 66.33333 66.33333 66.33333 66.33333 66.08333 66.08333\n [153] 66.08333 66.08333 68.08333 68.08333 68.08333 68.08333 68.16667 68.16667\n [161] 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 66.83333\n [169] 66.83333 66.83333 66.83333 67.41667 67.41667 67.41667 67.41667 69.08333\n [177] 69.08333 69.08333 69.08333 69.08333 67.91667 67.91667 67.91667 67.91667\n [185] 65.00000 65.00000 65.00000 66.33333 66.25000 66.25000 66.25000 66.25000\n [193] 66.25000 66.33333 66.33333 66.33333 66.33333 66.08333 66.08333 66.08333\n [201] 66.08333 68.08333 68.08333 68.08333 68.08333 68.16667 68.16667 68.16667\n [209] 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 66.83333 66.83333\n [217] 66.83333 66.83333 67.41667 67.41667 67.41667 67.41667 69.08333 69.08333\n [225] 69.08333 69.08333 69.08333 67.91667 67.91667 67.91667 67.91667 65.00000\n [233] 65.00000 65.00000 65.00000 66.33333 66.25000 66.25000 66.25000 66.25000\n [241] 66.25000 66.33333 66.33333 66.33333 66.33333 66.08333 66.08333 66.08333\n [249] 66.08333 68.08333 68.08333 68.08333 68.08333 68.16667 68.16667 68.16667\n [257] 68.16667 68.16667 68.16667 68.16667 68.16667 68.16667 66.83333 66.83333\n [265] 66.83333 66.83333 67.41667 67.41667 67.41667 67.41667 69.08333 69.08333\n [273] 69.08333 69.08333 69.08333 67.91667 67.91667 67.91667 67.91667 65.00000\n [281] 65.00000 65.00000 65.00000 65.83333 65.83333 65.83333 65.33333 65.33333\n [289] 65.33333 65.33333 65.33333 65.25000 65.25000 65.25000 65.25000 66.75000\n [297] 66.75000 66.75000 66.75000 67.58333 67.58333 67.58333 67.58333 67.83333\n [305] 67.83333 67.83333 67.83333 67.83333 69.00000 69.00000 69.00000 69.00000\n [313] 68.91667 68.91667 68.91667 68.91667 67.41667 67.41667 67.41667 67.41667\n [321] 67.00000 67.00000 67.00000 67.00000 67.00000 66.75000 66.75000 66.75000\n [329] 66.75000 64.83333 64.83333 64.83333 64.83333 64.08333 64.08333 64.08333\n [337] 64.08333 63.41667 67.50000 65.83333 65.83333 65.83333 65.83333 65.33333\n [345] 65.33333 65.33333 65.33333 65.33333 65.25000 65.25000 65.25000 65.25000\n [353] 66.75000 66.75000 66.75000 66.75000 67.58333 67.58333 67.58333 67.58333\n [361] 67.83333 67.83333 67.83333 67.83333 67.83333 69.00000 69.00000 69.00000\n [369] 69.00000 68.91667 68.91667 68.91667 68.91667 67.41667 67.41667 67.41667\n [377] 67.41667 67.00000 67.00000 67.00000 67.00000 67.00000 66.75000 66.75000\n [385] 66.75000 66.75000 64.83333 64.83333 64.83333 64.83333 64.08333 64.08333\n [393] 64.08333 64.08333 63.41667 67.50000 67.50000 67.50000 65.83333 65.83333\n [401] 65.83333 65.83333 65.33333 65.33333 65.33333 65.33333 65.33333 65.25000\n [409] 65.25000 65.25000 65.25000 66.75000 66.75000 66.75000 66.75000 67.58333\n [417] 67.58333 67.58333 67.58333 67.83333 67.83333 67.83333 67.83333 67.83333\n [425] 69.00000 69.00000 69.00000 69.00000 68.91667 68.91667 68.91667 68.91667\n [433] 67.41667 67.41667 67.41667 67.41667 67.00000 67.00000 67.00000 67.00000\n [441] 67.00000 66.75000 66.75000 66.75000 66.75000 64.83333 64.83333 64.83333\n [449] 64.83333 64.08333 64.08333 64.08333 64.08333 63.41667 67.50000 67.50000\n [457] 67.50000 67.50000 65.83333 65.83333 65.83333 65.83333 65.33333 65.33333\n [465] 65.33333 65.33333 65.33333 65.25000 65.25000 65.25000 65.25000 66.75000\n [473] 66.75000 66.75000 66.75000 67.58333 67.58333 67.58333 67.58333 67.83333\n [481] 67.83333 67.83333 67.83333 67.83333 69.00000 69.00000 69.00000 69.00000\n [489] 68.91667 68.91667 68.91667 68.91667 67.41667 67.41667 67.41667 67.41667\n [497] 67.00000 67.00000 67.00000 67.00000 67.00000 66.75000 66.75000 66.75000\n [505] 66.75000 64.83333 64.83333 64.83333 64.83333 64.08333 64.08333 64.08333\n [513] 64.08333 63.41667 63.41667 67.50000 67.50000 67.50000 67.50000 65.83333\n [521] 65.83333 65.83333 65.83333 65.33333 65.33333 65.33333 65.33333 65.33333\n [529] 65.25000 65.25000 65.25000 65.25000 66.75000 66.75000 66.75000 66.75000\n [537] 67.58333 67.58333 67.58333 67.58333 67.83333 67.83333 67.83333 67.83333\n [545] 67.83333 69.00000 69.00000 69.00000 69.00000 68.91667 68.91667 68.91667\n [553] 68.91667 67.41667 67.41667 67.41667 67.41667 67.00000 67.00000 67.00000\n [561] 67.00000 67.00000 66.75000 66.75000 66.75000 66.75000 64.83333 64.83333\n [569] 64.83333 64.83333 64.08333 64.08333 64.08333 64.08333 63.41667 63.41667\n [577] 65.75000 66.41667 66.41667 66.41667 66.41667       NA       NA       NA\n [585]       NA 64.08333 64.08333 64.08333 64.08333 64.08333 62.75000 62.75000\n [593] 62.75000 62.75000 65.33333 65.33333 65.33333 65.33333 65.91667 65.91667\n [601] 65.91667 65.91667 66.00000 66.00000 66.00000 66.00000 66.00000 69.08333\n [609] 69.08333 69.08333 69.08333 71.16667 71.16667 71.16667 71.16667 69.58333\n [617] 69.58333 69.58333 69.58333 67.16667 67.16667 67.16667 67.16667 67.16667\n [625] 66.41667 66.41667 66.41667 66.41667 65.08333 65.08333 65.08333 65.08333\n [633] 63.58333 63.58333 63.58333 63.58333 63.50000 65.75000 65.75000 66.41667\n [641] 66.41667 66.41667 66.41667       NA       NA       NA       NA 64.08333\n [649] 64.08333 64.08333 64.08333 64.08333 62.75000 62.75000 62.75000 62.75000\n [657] 65.33333 65.33333 65.33333 65.33333 65.91667 65.91667 65.91667 65.91667\n [665] 66.00000 66.00000 66.00000 66.00000 66.00000 69.08333 69.08333 69.08333\n [673] 69.08333 71.16667 71.16667 71.16667 71.16667 69.58333 69.58333 69.58333\n [681] 69.58333 67.16667 67.16667 67.16667 67.16667 67.16667 66.41667 66.41667\n [689] 66.41667 66.41667 65.08333 65.08333 65.08333 65.08333 63.58333 63.58333\n [697] 63.58333 63.58333 63.50000 65.75000 65.75000 66.41667 66.41667 66.41667\n [705] 66.41667       NA       NA       NA       NA 64.08333 64.08333 64.08333\n [713] 64.08333 64.08333 62.75000 62.75000 62.75000 62.75000 65.33333 65.33333\n [721] 65.33333 65.33333 65.91667 65.91667 65.91667 65.91667 66.00000 66.00000\n [729] 66.00000 66.00000 66.00000 69.08333 69.08333 69.08333 69.08333 71.16667\n [737] 71.16667 71.16667 71.16667 69.58333 69.58333 69.58333 69.58333 67.16667\n [745] 67.16667 67.16667 67.16667 67.16667 66.41667 66.41667 66.41667 66.41667\n [753] 65.08333 65.08333 65.08333 65.08333 63.58333 63.58333 63.58333 63.58333\n [761] 63.50000 65.75000 65.75000 65.75000 66.41667 66.41667 66.41667 66.41667\n [769]       NA       NA       NA       NA 64.08333 64.08333 64.08333 64.08333\n [777] 64.08333 62.75000 62.75000 62.75000 62.75000 65.33333 65.33333 65.33333\n [785] 65.33333 65.91667 65.91667 65.91667 65.91667 66.00000 66.00000 66.00000\n [793] 66.00000 66.00000 69.08333 69.08333 69.08333 69.08333 71.16667 71.16667\n [801] 71.16667 71.16667 69.58333 69.58333 69.58333 69.58333 67.16667 67.16667\n [809] 67.16667 67.16667 67.16667 66.41667 66.41667 66.41667 66.41667 65.08333\n [817] 65.08333 65.08333 65.08333 63.58333 63.58333 63.58333 63.58333 63.50000\n [825] 65.75000 65.75000 65.75000 65.75000 66.41667 66.41667 66.41667 66.41667\n [833]       NA       NA       NA       NA 64.08333 64.08333 64.08333 64.08333\n [841] 64.08333 62.75000 62.75000 62.75000 62.75000 65.33333 65.33333 65.33333\n [849] 65.33333 65.91667 65.91667 65.91667 65.91667 66.00000 66.00000 66.00000\n [857] 66.00000 66.00000 69.08333 69.08333 69.08333 69.08333 71.16667 71.16667\n [865] 71.16667 71.16667 69.58333 69.58333 69.58333 69.58333 67.16667 67.16667\n [873] 67.16667 67.16667 67.16667 66.41667 66.41667 66.41667 66.41667 65.08333\n [881] 65.08333 65.08333 65.08333 63.58333 63.58333 63.58333 63.58333 63.50000\n [889] 65.75000 65.75000 65.75000 65.75000 66.41667 66.41667 66.41667 66.41667\n [897]       NA       NA       NA       NA 64.08333 64.08333 64.08333 64.08333\n [905] 64.08333 62.75000 62.75000 62.75000 62.75000 65.33333 65.33333 65.33333\n [913] 65.33333 65.91667 65.91667 65.91667 65.91667 66.00000 66.00000 66.00000\n [921] 66.00000 66.00000 69.08333 69.08333 69.08333 69.08333 71.16667 71.16667\n [929] 71.16667 71.16667 69.58333 69.58333 69.58333 69.58333 67.16667 67.16667\n [937] 67.16667 67.16667 67.16667 66.41667 66.41667 66.41667 66.41667 65.08333\n [945] 65.08333 65.08333 65.08333 63.58333 63.58333 63.58333 63.58333 63.50000\n [953] 63.50000 65.00000 65.00000 65.00000 65.00000 66.16667 66.16667 66.16667\n [961] 66.16667 64.25000 64.25000 64.25000 64.25000 65.08333 65.08333 65.08333\n [969] 65.08333 65.08333 63.66667 63.66667 63.66667 63.66667 66.00000 66.00000\n [977] 66.00000 66.00000 67.08333 67.08333 67.08333 67.08333 68.25000 68.25000\n [985] 68.25000 68.25000 68.25000 69.66667 69.66667 69.66667 69.66667 70.66667\n [993] 70.66667 70.66667 70.66667 71.25000 71.25000 71.25000 71.25000 69.08333\n[1001] 69.08333 69.08333 69.08333 69.08333 67.83333 67.83333 67.83333 67.83333\n[1009] 65.08333 65.08333 65.08333 65.08333 62.66667 62.66667 62.66667 62.66667\n[1017] 64.00000 64.00000 67.75000 67.75000 65.00000 65.00000 65.00000 65.00000\n[1025] 66.16667 66.16667 66.16667 66.16667 64.25000 64.25000 64.25000 64.25000\n[1033] 65.08333 65.08333 65.08333 65.08333 65.08333 63.66667 63.66667 63.66667\n[1041] 63.66667 66.00000 66.00000 66.00000 66.00000 67.08333 67.08333 67.08333\n[1049] 67.08333 68.25000 68.25000 68.25000 68.25000 68.25000 69.66667 69.66667\n[1057] 69.66667 69.66667 70.66667 70.66667 70.66667 70.66667 71.25000 71.25000\n[1065] 71.25000 71.25000 69.08333 69.08333 69.08333 69.08333 69.08333 67.83333\n[1073] 67.83333 67.83333 67.83333 65.08333 65.08333 65.08333 65.08333 62.66667\n[1081] 62.66667 62.66667 62.66667 64.00000 67.75000 65.00000 65.00000 65.00000\n[1089] 65.00000 66.16667 66.16667 66.16667 66.16667 64.25000 64.25000 64.25000\n[1097] 64.25000 65.08333 65.08333 65.08333 65.08333 65.08333 63.66667 63.66667\n[1105] 63.66667 63.66667 66.00000 66.00000 66.00000 66.00000 67.08333 67.08333\n[1113] 67.08333 67.08333 68.25000 68.25000 68.25000 68.25000 68.25000 69.66667\n[1121] 69.66667 69.66667 69.66667 70.66667 70.66667 70.66667 70.66667 71.25000\n[1129] 71.25000 71.25000 71.25000 69.08333 69.08333 69.08333 69.08333 69.08333\n[1137] 67.83333 67.83333 67.83333 67.83333 65.08333 65.08333 65.08333 65.08333\n[1145] 62.66667 62.66667 62.66667 62.66667 64.00000 67.75000 65.00000 65.00000\n[1153] 65.00000 65.00000 66.16667 66.16667 66.16667 66.16667 64.25000 64.25000\n[1161] 64.25000 64.25000 65.08333 65.08333 65.08333 65.08333 65.08333 63.66667\n[1169] 63.66667 63.66667 63.66667 66.00000 66.00000 66.00000 66.00000 67.08333\n[1177] 67.08333 67.08333 67.08333 68.25000 68.25000 68.25000 68.25000 68.25000\n[1185] 69.66667 69.66667 69.66667 69.66667 70.66667 70.66667 70.66667 70.66667\n[1193] 71.25000 71.25000 71.25000 71.25000 69.08333 69.08333 69.08333 69.08333\n[1201] 69.08333 67.83333 67.83333 67.83333 67.83333 65.08333 65.08333 65.08333\n[1209] 65.08333 62.66667 62.66667 62.66667 62.66667 65.00000 65.00000 65.00000\n[1217] 65.00000 66.16667 66.16667 66.16667 66.16667 64.25000 64.25000 64.25000\n[1225] 64.25000 65.08333 65.08333 65.08333 65.08333 65.08333 63.66667 63.66667\n[1233] 63.66667 63.66667 66.00000 66.00000 66.00000 66.00000 67.08333 67.08333\n[1241] 67.08333 67.08333 68.25000 68.25000 68.25000 68.25000 68.25000 69.66667\n[1249] 69.66667 69.66667 69.66667 70.66667 70.66667 70.66667 70.66667 71.25000\n[1257] 71.25000 71.25000 71.25000 69.08333 69.08333 69.08333 69.08333 69.08333\n[1265] 67.83333 67.83333 67.83333 67.83333 65.08333 65.08333 65.08333 65.08333\n[1273] 62.66667 62.66667 62.66667 65.00000 65.00000 65.00000 65.00000 66.16667\n[1281] 66.16667 66.16667 66.16667 64.25000 64.25000 64.25000 64.25000 65.08333\n[1289] 65.08333 65.08333 65.08333 65.08333 63.66667 63.66667 63.66667 63.66667\n[1297] 66.00000 66.00000 66.00000 66.00000 67.08333 67.08333 67.08333 67.08333\n[1305] 68.25000 68.25000 68.25000 68.25000 68.25000 69.66667 69.66667 69.66667\n[1313] 69.66667 70.66667 70.66667 70.66667 70.66667 71.25000 71.25000 71.25000\n[1321] 71.25000 69.08333 69.08333 69.08333 69.08333 69.08333 67.83333 67.83333\n[1329] 67.83333 67.83333 65.08333 65.08333 65.08333 65.08333 62.66667 62.66667\n[1337] 62.66667 67.83333 67.83333 67.83333 67.83333 67.75000 67.75000 67.75000\n[1345] 67.75000 65.83333 65.83333 65.83333 65.83333 66.25000 66.25000 66.25000\n[1353] 66.25000 66.25000 67.75000 67.75000 67.75000 67.75000 66.33333 66.33333\n[1361] 66.33333 66.33333 67.50000 67.50000 67.50000 67.50000 68.41667 68.41667\n[1369] 68.41667 68.41667 68.41667 67.58333 67.58333 67.58333 67.58333 68.08333\n[1377] 68.08333 68.08333 68.08333 70.25000 70.25000 70.25000 70.25000 68.41667\n[1385] 68.41667 68.41667 68.41667 68.41667 65.75000 65.75000 65.75000 65.75000\n[1393] 63.00000 63.00000 63.00000 63.00000 61.50000 61.50000 66.50000 67.83333\n[1401] 67.83333 67.83333 67.83333 67.75000 67.75000 67.75000 67.75000 65.83333\n[1409] 65.83333 65.83333 65.83333 66.25000 66.25000 66.25000 66.25000 66.25000\n[1417] 67.75000 67.75000 67.75000 67.75000 66.33333 66.33333 66.33333 66.33333\n[1425] 67.50000 67.50000 67.50000 67.50000 68.41667 68.41667 68.41667 68.41667\n[1433] 68.41667 67.58333 67.58333 67.58333 67.58333 68.08333 68.08333 68.08333\n[1441] 68.08333 70.25000 70.25000 70.25000 70.25000 68.41667 68.41667 68.41667\n[1449] 68.41667 68.41667 65.75000 65.75000 65.75000 65.75000 63.00000 63.00000\n[1457] 63.00000 63.00000 61.50000 61.50000 66.50000 67.83333 67.83333 67.83333\n[1465] 67.83333 67.75000 67.75000 67.75000 67.75000 65.83333 65.83333 65.83333\n[1473] 65.83333 66.25000 66.25000 66.25000 66.25000 66.25000 67.75000 67.75000\n[1481] 67.75000 67.75000 66.33333 66.33333 66.33333 66.33333 67.50000 67.50000\n[1489] 67.50000 67.50000 68.41667 68.41667 68.41667 68.41667 68.41667 67.58333\n[1497] 67.58333 67.58333 67.58333 68.08333 68.08333 68.08333 68.08333 70.25000\n[1505] 70.25000 70.25000 70.25000 68.41667 68.41667 68.41667 68.41667 68.41667\n[1513] 65.75000 65.75000 65.75000 65.75000 63.00000 63.00000 63.00000 63.00000\n[1521] 61.50000 61.50000 66.50000 67.83333 67.83333 67.83333 67.83333 67.75000\n[1529] 67.75000 67.75000 67.75000 65.83333 65.83333 65.83333 65.83333 66.25000\n[1537] 66.25000 66.25000 66.25000 66.25000 67.75000 67.75000 67.75000 67.75000\n[1545] 66.33333 66.33333 66.33333 66.33333 67.50000 67.50000 67.50000 67.50000\n[1553] 68.41667 68.41667 68.41667 68.41667 68.41667 67.58333 67.58333 67.58333\n[1561] 67.58333 68.08333 68.08333 68.08333 68.08333 70.25000 70.25000 70.25000\n[1569] 70.25000 68.41667 68.41667 68.41667 68.41667 68.41667 65.75000 65.75000\n[1577] 65.75000 65.75000 63.00000 63.00000 63.00000 63.00000 61.50000 61.50000\n[1585] 66.50000 67.83333 67.83333 67.83333 67.83333 67.75000 67.75000 67.75000\n[1593] 67.75000 65.83333 65.83333 65.83333 65.83333 66.25000 66.25000 66.25000\n[1601] 66.25000 66.25000 67.75000 67.75000 67.75000 67.75000 66.33333 66.33333\n[1609] 66.33333 66.33333 67.50000 67.50000 67.50000 67.50000 68.41667 68.41667\n[1617] 68.41667 68.41667 68.41667 67.58333 67.58333 67.58333 67.58333 68.08333\n[1625] 68.08333 68.08333 68.08333 70.25000 70.25000 70.25000 70.25000 68.41667\n[1633] 68.41667 68.41667 68.41667 68.41667 65.75000 65.75000 65.75000 65.75000\n[1641] 63.00000 63.00000 63.00000 63.00000 61.50000 61.50000 66.50000 66.50000\n[1649] 67.83333 67.83333 67.83333 67.83333 67.75000 67.75000 67.75000 67.75000\n[1657] 65.83333 65.83333 65.83333 65.83333 66.25000 66.25000 66.25000 66.25000\n[1665] 66.25000 67.75000 67.75000 67.75000 67.75000 66.33333 66.33333 66.33333\n[1673] 66.33333 67.50000 67.50000 67.50000 67.50000 68.41667 68.41667 68.41667\n[1681] 68.41667 68.41667 67.58333 67.58333 67.58333 67.58333 68.08333 68.08333\n[1689] 68.08333 68.08333 70.25000 70.25000 70.25000 70.25000 68.41667 68.41667\n[1697] 68.41667 68.41667 68.41667 65.75000 65.75000 65.75000 65.75000 63.00000\n[1705] 63.00000 63.00000 63.00000 61.50000 61.50000 69.08333 69.08333 68.58333\n[1713] 68.58333 68.58333 68.58333 68.75000 68.75000 68.75000 68.75000 67.41667\n[1721] 67.41667 67.41667 67.41667 67.08333 67.08333 67.08333 67.08333 67.08333\n[1729] 66.91667 66.91667 66.91667 66.91667 65.50000 65.50000 65.50000 65.50000\n[1737] 66.16667 66.16667 66.16667 66.16667 67.16667 67.16667 67.16667 67.16667\n[1745] 67.16667 67.08333 67.08333 67.08333 67.08333 66.50000 66.50000 66.50000\n[1753] 66.50000 66.58333 66.58333 66.58333 66.58333 65.41667 65.41667 65.41667\n[1761] 65.41667 65.41667 63.91667 63.91667 63.91667 63.91667 62.41667 62.41667\n[1769] 62.41667 62.41667 63.00000 63.00000 69.08333 69.08333 68.58333 68.58333\n[1777] 68.58333 68.58333 68.75000 68.75000 68.75000 68.75000 67.41667 67.41667\n[1785] 67.41667 67.41667 67.08333 67.08333 67.08333 67.08333 67.08333 66.91667\n[1793] 66.91667 66.91667 66.91667 65.50000 65.50000 65.50000 65.50000 66.16667\n[1801] 66.16667 66.16667 66.16667 67.16667 67.16667 67.16667 67.16667 67.16667\n[1809] 67.08333 67.08333 67.08333 67.08333 66.50000 66.50000 66.50000 66.50000\n[1817] 66.58333 66.58333 66.58333 66.58333 65.41667 65.41667 65.41667 65.41667\n[1825] 65.41667 63.91667 69.08333 69.08333 68.58333 68.58333 68.58333 68.58333\n[1833] 68.75000 68.75000 68.75000 68.75000 67.41667 67.41667 67.41667 67.41667\n[1841] 67.08333 67.08333 67.08333 67.08333 67.08333 66.91667 66.91667 66.91667\n[1849] 66.91667 65.50000 65.50000 65.50000 65.50000 66.16667 66.16667 66.16667\n[1857] 66.16667 67.16667 67.16667 67.16667 67.16667 67.16667 67.08333 67.08333\n[1865] 67.08333 67.08333 66.50000 66.50000 66.50000 66.50000 66.58333 66.58333\n[1873] 66.58333 66.58333 65.41667 65.41667 65.41667 65.41667 65.41667 63.91667\n[1881] 69.08333 69.08333 68.58333 68.58333 68.58333 68.58333 68.75000 68.75000\n[1889] 68.75000 68.75000 67.41667 67.41667 67.41667 67.41667 67.08333 67.08333\n[1897] 67.08333 67.08333 67.08333 66.91667 66.91667 66.91667 66.91667 65.50000\n[1905] 65.50000 65.50000 65.50000 66.16667 66.16667 66.16667 66.16667 67.16667\n[1913] 67.16667 67.16667 67.16667 67.16667 67.08333 67.08333 67.08333 67.08333\n[1921] 66.50000 66.50000 66.50000 66.50000 66.58333 66.58333 66.58333 66.58333\n[1929] 65.41667 65.41667 65.41667 65.41667 65.41667 63.91667 63.91667 69.08333\n[1937] 69.08333 68.58333 68.58333 68.58333 68.58333 68.75000 68.75000 68.75000\n[1945] 68.75000 67.41667 67.41667 67.41667 67.41667 67.08333 67.08333 67.08333\n[1953] 67.08333 67.08333 66.91667 66.91667 66.91667 66.91667 65.50000 65.50000\n[1961] 65.50000 65.50000 66.16667 66.16667 66.16667 66.16667 67.16667 67.16667\n[1969] 67.16667 67.16667 67.16667 67.08333 67.08333 67.08333 67.08333 66.50000\n[1977] 66.50000 66.50000 66.50000 66.58333 66.58333 66.58333 66.58333 65.41667\n[1985] 65.41667 65.41667 65.41667 65.41667 69.08333 69.08333 69.08333 68.58333\n[1993] 68.58333 68.58333 68.58333 68.75000 68.75000 68.75000 68.75000 67.41667\n[2001] 67.41667 67.41667 67.41667 67.08333 67.08333 67.08333 67.08333 67.08333\n[2009] 66.91667 66.91667 66.91667 66.91667 65.50000 65.50000 65.50000 65.50000\n[2017] 66.16667 66.16667 66.16667 66.16667 67.16667 67.16667 67.16667 67.16667\n[2025] 67.16667 67.08333 67.08333 67.08333 67.08333 66.50000 66.50000 66.50000\n[2033] 66.50000 66.58333 66.58333 66.58333 66.58333 65.41667 65.41667 65.41667\n[2041] 65.41667 65.41667 63.91667 69.00000 69.00000 69.00000 69.16667 69.16667\n[2049] 69.16667 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333 68.83333\n[2057] 68.83333 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667 65.08333\n[2065] 65.08333 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667 66.58333\n[2073] 66.58333 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000 66.75000\n[2081] 68.41667 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333 66.58333\n[2089] 65.91667 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000 65.00000\n[2097] 65.00000 69.00000 69.00000 69.00000 69.00000 69.16667 69.16667 69.16667\n[2105] 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333 68.83333 68.83333\n[2113] 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667 65.08333 65.08333\n[2121] 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667 66.58333 66.58333\n[2129] 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000 66.75000 68.41667\n[2137] 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333 66.58333 65.91667\n[2145] 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000 65.00000 65.00000\n[2153] 64.50000 64.50000 69.00000 69.00000 69.00000 69.00000 69.16667 69.16667\n[2161] 69.16667 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333 68.83333\n[2169] 68.83333 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667 65.08333\n[2177] 65.08333 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667 66.58333\n[2185] 66.58333 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000 66.75000\n[2193] 68.41667 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333 66.58333\n[2201] 65.91667 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000 65.00000\n[2209] 65.00000 64.50000 64.50000 64.50000 64.50000 64.75000 64.75000 64.75000\n[2217] 64.75000 69.00000 69.00000 69.00000 69.00000 69.16667 69.16667 69.16667\n[2225] 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333 68.83333 68.83333\n[2233] 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667 65.08333 65.08333\n[2241] 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667 66.58333 66.58333\n[2249] 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000 66.75000 68.41667\n[2257] 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333 66.58333 65.91667\n[2265] 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000 65.00000 65.00000\n[2273] 64.50000 64.50000 64.50000 64.50000 64.75000 64.75000 64.75000 64.75000\n[2281] 65.25000 69.00000 69.00000 69.00000 69.00000 69.16667 69.16667 69.16667\n[2289] 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333 68.83333 68.83333\n[2297] 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667 65.08333 65.08333\n[2305] 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667 66.58333 66.58333\n[2313] 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000 66.75000 68.41667\n[2321] 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333 66.58333 65.91667\n[2329] 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000 65.00000 65.00000\n[2337] 64.50000 64.50000 64.50000 64.50000 64.75000 64.75000 64.75000 64.75000\n[2345] 65.25000 65.25000 69.00000 69.00000 69.00000 69.00000 69.00000 69.16667\n[2353] 69.16667 69.16667 69.16667 70.66667 70.66667 70.66667 70.66667 68.83333\n[2361] 68.83333 68.83333 68.83333 66.41667 66.41667 66.41667 66.41667 66.41667\n[2369] 65.08333 65.08333 65.08333 65.08333 66.66667 66.66667 66.66667 66.66667\n[2377] 66.58333 66.58333 66.58333 66.58333 66.75000 66.75000 66.75000 66.75000\n[2385] 66.75000 68.41667 68.41667 68.41667 68.41667 66.58333 66.58333 66.58333\n[2393] 66.58333 65.91667 65.91667 65.91667 65.91667 65.00000 65.00000 65.00000\n[2401] 65.00000 65.00000 64.50000 64.50000 64.50000 64.50000 64.75000 64.75000\n[2409] 64.75000 64.75000 65.25000 65.25000 68.66667 68.66667 68.66667 68.66667\n[2417] 68.66667 69.41667 69.41667 69.41667 69.41667 68.83333 68.83333 68.83333\n[2425] 68.83333 68.50000 68.50000 68.50000 68.50000 68.91667 68.91667 68.91667\n[2433] 68.91667 68.91667 66.41667 66.41667 66.41667 66.41667 68.25000 68.25000\n[2441] 68.25000 68.25000 72.00000 72.00000 72.00000 72.00000 73.00000 73.00000\n[2449] 73.00000 73.00000 73.00000 69.58333 69.58333 69.58333 69.58333 65.66667\n[2457] 65.66667 65.66667 65.66667 66.08333 66.08333 66.08333 66.08333 65.91667\n[2465] 65.91667 65.91667 65.91667 65.91667 64.75000 64.75000 64.75000 64.75000\n[2473] 64.66667 64.66667 64.66667 64.66667 64.58333 68.00000 68.66667 68.66667\n[2481] 68.66667 68.66667 68.66667 69.41667 69.41667 69.41667 69.41667 68.83333\n[2489] 68.83333 68.83333 68.83333 68.50000 68.50000 68.50000 68.50000 68.91667\n[2497] 68.91667 68.91667 68.91667 68.91667 66.41667 66.41667 66.41667 66.41667\n[2505] 68.25000 68.25000 68.25000 68.25000 72.00000 72.00000 72.00000 72.00000\n[2513] 73.00000 73.00000 73.00000 73.00000 73.00000 69.58333 69.58333 69.58333\n[2521] 69.58333 65.66667 65.66667 65.66667 65.66667 66.08333 66.08333 66.08333\n[2529] 66.08333 65.91667 65.91667 65.91667 65.91667 65.91667 64.75000 64.75000\n[2537] 64.75000 64.75000 64.66667 64.66667 64.66667 64.66667 64.58333 68.00000\n[2545] 68.00000 68.66667 68.66667 68.66667 68.66667 68.66667 69.41667 69.41667\n[2553] 69.41667 69.41667 68.83333 68.83333 68.83333 68.83333 68.50000 68.50000\n[2561] 68.50000 68.50000 68.91667 68.91667 68.91667 68.91667 68.91667 66.41667\n[2569] 66.41667 66.41667 66.41667 68.25000 68.25000 68.25000 68.25000 72.00000\n[2577] 72.00000 72.00000 72.00000 73.00000 73.00000 73.00000 73.00000 73.00000\n[2585] 69.58333 69.58333 69.58333 69.58333 65.66667 65.66667 65.66667 65.66667\n[2593] 66.08333 66.08333 66.08333 66.08333 65.91667 65.91667 65.91667 65.91667\n[2601] 65.91667 64.75000 64.75000 64.75000 64.75000 64.66667 64.66667 64.66667\n[2609] 64.66667 64.58333 68.00000 68.00000 68.66667 68.66667 68.66667 68.66667\n[2617] 68.66667 69.41667 69.41667 69.41667 69.41667 68.83333 68.83333 68.83333\n[2625] 68.83333 68.50000 68.50000 68.50000 68.50000 68.91667 68.91667 68.91667\n[2633] 68.91667 68.91667 66.41667 66.41667 66.41667 66.41667 68.25000 68.25000\n[2641] 68.25000 68.25000 72.00000 72.00000 72.00000 72.00000 73.00000 73.00000\n[2649] 73.00000 73.00000 73.00000 69.58333 69.58333 69.58333 69.58333 65.66667\n[2657] 65.66667 65.66667 65.66667 66.08333 66.08333 66.08333 66.08333 65.91667\n[2665] 65.91667 65.91667 65.91667 65.91667 64.75000 64.75000 64.75000 64.75000\n[2673] 64.66667 64.66667 64.66667 64.66667 64.58333 64.58333 68.00000 68.00000\n[2681] 68.00000 68.66667 68.66667 68.66667 68.66667 68.66667 69.41667 69.41667\n[2689] 69.41667 69.41667 68.83333 68.83333 68.83333 68.83333 68.50000 68.50000\n[2697] 68.50000 68.50000 68.91667 68.91667 68.91667 68.91667 68.91667 66.41667\n[2705] 66.41667 66.41667 66.41667 68.25000 68.25000 68.25000 68.25000 72.00000\n[2713] 72.00000 72.00000 72.00000 73.00000 73.00000 73.00000 73.00000 73.00000\n[2721] 69.58333 69.58333 69.58333 69.58333 65.66667 65.66667 65.66667 65.66667\n[2729] 66.08333 66.08333 66.08333 66.08333 65.91667 65.91667 65.91667 65.91667\n[2737] 65.91667 64.75000 64.75000 64.75000 64.75000 64.66667 64.66667 64.66667\n[2745] 64.66667 68.00000 68.00000 68.00000 68.00000 68.66667 68.66667 68.66667\n[2753] 68.66667 68.66667 69.41667 69.41667 69.41667 69.41667 68.83333 68.83333\n[2761] 68.83333 68.83333 68.50000 68.50000 68.50000 68.50000 68.91667 68.91667\n[2769] 68.91667 68.91667 68.91667 66.41667 66.41667 66.41667 66.41667 68.25000\n[2777] 68.25000 68.25000 68.25000 72.00000 72.00000 72.00000 72.00000 73.00000\n[2785] 73.00000 73.00000 73.00000 73.00000 69.58333 69.58333 69.58333 69.58333\n[2793] 65.66667 65.66667 65.66667 65.66667 66.08333 66.08333 66.08333 66.08333\n[2801] 65.91667 65.91667 65.91667 65.91667 65.91667 64.75000 64.75000 64.75000\n[2809] 64.75000 64.66667 64.66667 70.75000 70.75000 70.75000 70.75000 70.16667\n[2817] 70.16667 70.16667 70.16667 70.16667 68.66667 68.66667 68.66667 68.66667\n[2825] 66.58333 66.58333 66.58333 66.58333 66.41667 66.41667 66.41667 66.41667\n[2833] 67.91667 67.91667 67.91667 67.91667 67.91667 69.66667 69.66667 69.66667\n[2841] 69.66667 68.08333 68.08333 68.08333 68.08333 70.08333 70.08333 70.08333\n[2849] 70.08333 72.00000 72.00000 72.00000 72.00000 72.00000 68.08333 68.08333\n[2857] 68.08333 68.08333 65.75000 65.75000 65.75000 65.75000 64.83333 64.83333\n[2865] 64.83333 64.83333 64.66667 64.66667 64.66667 64.66667 64.66667 64.41667\n[2873] 64.41667 64.41667 64.41667 65.25000 69.75000 69.75000 70.75000 70.75000\n[2881] 70.75000 70.75000 70.16667 70.16667 70.16667 70.16667 70.16667 68.66667\n[2889] 68.66667 68.66667 68.66667 66.58333 66.58333 66.58333 66.58333 66.41667\n[2897] 66.41667 66.41667 66.41667 67.91667 67.91667 67.91667 67.91667 67.91667\n[2905] 69.66667 69.66667 69.66667 69.66667 68.08333 68.08333 68.08333 68.08333\n[2913] 70.08333 70.08333 70.08333 70.08333 72.00000 72.00000 72.00000 72.00000\n[2921] 72.00000 68.08333 68.08333 68.08333 68.08333 65.75000 65.75000 65.75000\n[2929] 65.75000 64.83333 64.83333 64.83333 64.83333 64.66667 64.66667 64.66667\n[2937] 64.66667 64.66667 64.41667 64.41667 64.41667 64.41667 65.25000 69.75000\n[2945] 69.75000 69.75000 70.75000 70.75000 70.75000 70.75000 70.16667 70.16667\n[2953] 70.16667 70.16667 70.16667 68.66667 68.66667 68.66667 68.66667 66.58333\n[2961] 66.58333 66.58333 66.58333 66.41667 66.41667 66.41667 66.41667 67.91667\n[2969] 67.91667 67.91667 67.91667 67.91667 69.66667 69.66667 69.66667 69.66667\n[2977] 68.08333 68.08333 68.08333 68.08333 70.08333 70.08333 70.08333 70.08333\n[2985] 72.00000 72.00000 72.00000 72.00000 72.00000 68.08333 68.08333 68.08333\n[2993] 68.08333 65.75000 65.75000 65.75000 65.75000 64.83333 64.83333 64.83333\n[3001] 64.83333 64.66667 64.66667 64.66667 64.66667 64.66667 64.41667 64.41667\n[3009] 69.75000 69.75000 69.75000 69.75000 70.75000 70.75000 70.75000 70.75000\n[3017] 70.16667 70.16667 70.16667 70.16667 70.16667 68.66667 68.66667 68.66667\n[3025] 68.66667 66.58333 66.58333 66.58333 66.58333 66.41667 66.41667 66.41667\n[3033] 66.41667 67.91667 67.91667 67.91667 67.91667 67.91667 69.66667 69.66667\n[3041] 69.66667 69.66667 68.08333 68.08333 68.08333 68.08333 70.08333 70.08333\n[3049] 70.08333 70.08333 72.00000 72.00000 72.00000 72.00000 72.00000 68.08333\n[3057] 68.08333 68.08333 68.08333 65.75000 65.75000 65.75000 65.75000 64.83333\n[3065] 64.83333 64.83333 64.83333 64.66667 64.66667 64.66667 64.66667 64.66667\n[3073] 68.41667 69.75000 69.75000 69.75000 69.75000 70.75000 70.75000 70.75000\n[3081] 70.75000 70.16667 70.16667 70.16667 70.16667 70.16667 68.66667 68.66667\n[3089] 68.66667 68.66667 66.58333 66.58333 66.58333 66.58333 66.41667 66.41667\n[3097] 66.41667 66.41667 67.91667 67.91667 67.91667 67.91667 67.91667 69.66667\n[3105] 69.66667 69.66667 69.66667 68.08333 68.08333 68.08333 68.08333 70.08333\n[3113] 70.08333 70.08333 70.08333 72.00000 72.00000 72.00000 72.00000 72.00000\n[3121] 68.08333 68.08333 68.08333 68.08333 65.75000 65.75000 65.75000 65.75000\n[3129] 64.83333 64.83333 64.83333 64.83333 64.66667 64.66667 64.66667 64.66667\n[3137] 64.66667 64.41667 68.41667 69.75000 69.75000 69.75000 69.75000 70.75000\n[3145] 70.75000 70.75000 70.75000 70.16667 70.16667 70.16667 70.16667 70.16667\n[3153] 68.66667 68.66667 68.66667 68.66667 66.58333 66.58333 66.58333 66.58333\n[3161] 66.41667 66.41667 66.41667 66.41667 67.91667 67.91667 67.91667 67.91667\n[3169] 67.91667 69.66667 69.66667 69.66667 69.66667 68.08333 68.08333 68.08333\n[3177] 68.08333 70.08333 70.08333 70.08333 70.08333 72.00000 72.00000 72.00000\n[3185] 72.00000 72.00000 68.08333 68.08333 68.08333 68.08333 65.75000 65.75000\n[3193] 65.75000 65.75000 64.83333 64.83333 64.83333 64.83333 64.66667 64.66667\n[3201] 64.66667 64.66667 64.66667 64.41667 64.41667 64.41667 65.58333 65.58333\n[3209] 67.50000 67.50000 67.50000 67.50000 69.33333 69.33333 69.33333 69.33333\n[3217] 71.91667 71.91667 71.91667 71.91667 71.50000 71.50000 71.50000 71.50000\n[3225] 71.50000 68.16667 68.16667 68.16667 68.16667 66.66667 66.66667 66.66667\n[3233] 66.66667 64.66667 64.66667 64.66667 64.66667 63.41667 63.41667 63.41667\n[3241] 63.41667 63.41667 65.00000 65.00000 65.00000 65.00000 65.91667 65.91667\n[3249] 65.91667 65.91667 66.58333 66.58333 66.58333 66.58333 65.91667 65.91667\n[3257] 65.91667 65.91667 65.91667 63.83333 63.83333 63.83333 63.83333 63.41667\n[3265] 63.41667 63.41667 63.41667 61.83333 61.83333 61.83333 61.83333 64.25000\n[3273] 64.25000 64.25000 64.25000 64.25000 66.58333 66.58333 66.58333 66.58333\n[3281] 65.58333 65.58333 67.50000 67.50000 67.50000 67.50000 69.33333 69.33333\n[3289] 69.33333 69.33333 71.91667 71.91667 71.91667 71.91667 71.50000 71.50000\n[3297] 71.50000 71.50000 71.50000 68.16667 68.16667 68.16667 68.16667 66.66667\n[3305] 66.66667 66.66667 66.66667 64.66667 64.66667 64.66667 64.66667 63.41667\n[3313] 63.41667 63.41667 63.41667 63.41667 65.00000 65.00000 65.00000 65.00000\n[3321] 65.91667 65.91667 65.91667 65.91667 66.58333 66.58333 66.58333 66.58333\n[3329] 65.91667 65.91667 65.91667 65.91667 65.91667 63.83333 63.83333 63.83333\n[3337] 63.83333 63.41667 63.41667 63.41667 63.41667 61.83333 61.83333 61.83333\n[3345] 61.83333 64.25000 64.25000 64.25000 64.25000 64.25000 66.58333 66.58333\n[3353] 66.58333 65.58333 65.58333 67.50000 67.50000 67.50000 67.50000 69.33333\n[3361] 69.33333 69.33333 69.33333 71.91667 71.91667 71.91667 71.91667 71.50000\n[3369] 71.50000 71.50000 71.50000 71.50000 68.16667 68.16667 68.16667 68.16667\n[3377] 66.66667 66.66667 66.66667 66.66667 64.66667 64.66667 64.66667 64.66667\n[3385] 63.41667 63.41667 63.41667 63.41667 63.41667 65.00000 65.00000 65.00000\n[3393] 65.00000 65.91667 65.91667 65.91667 65.91667 66.58333 66.58333 66.58333\n[3401] 66.58333 65.91667 65.91667 65.91667 65.91667 65.91667 63.83333 63.83333\n[3409] 63.83333 63.83333 63.41667 63.41667 63.41667 63.41667 61.83333 61.83333\n[3417] 61.83333 61.83333 64.25000 64.25000 64.25000 64.25000 64.25000 66.58333\n[3425] 66.58333 66.58333 65.58333 67.50000 67.50000 67.50000 67.50000 69.33333\n[3433] 69.33333 69.33333 69.33333 71.91667 71.91667 71.91667 71.91667 71.50000\n[3441] 71.50000 71.50000 71.50000 71.50000 68.16667 68.16667 68.16667 68.16667\n[3449] 66.66667 66.66667 66.66667 66.66667 64.66667 64.66667 64.66667 64.66667\n[3457] 63.41667 63.41667 63.41667 63.41667 63.41667 65.00000 65.00000 65.00000\n[3465] 65.00000 65.91667 65.91667 65.91667 65.91667 66.58333 66.58333 66.58333\n[3473] 66.58333 65.91667 65.91667 65.91667 65.91667 65.91667 63.83333 63.83333\n[3481] 63.41667 63.41667 63.41667 63.41667 61.83333 61.83333 61.83333 61.83333\n[3489] 64.25000 64.25000 64.25000 65.58333 67.50000 67.50000 67.50000 67.50000\n[3497] 69.33333 69.33333 69.33333 69.33333 71.91667 71.91667 71.91667 71.91667\n[3505] 71.50000 71.50000 71.50000 71.50000 71.50000 68.16667 68.16667 68.16667\n[3513] 68.16667 66.66667 66.66667 66.66667 66.66667 64.66667 64.66667 64.66667\n[3521] 64.66667 63.41667 63.41667 63.41667 63.41667 63.41667 65.00000 65.00000\n[3529] 65.00000 65.00000 65.91667 65.91667 65.91667 65.91667 66.58333 66.58333\n[3537] 66.58333 66.58333 65.91667 65.91667 65.91667 65.91667 65.91667 63.83333\n[3545] 63.83333 63.83333 63.41667 61.83333 61.83333 61.83333 61.83333 65.58333\n[3553] 65.58333 65.58333 67.50000 67.50000 67.50000 67.50000 69.33333 69.33333\n[3561] 69.33333 69.33333 71.91667 71.91667 71.91667 71.91667 71.50000 71.50000\n[3569] 71.50000 71.50000 71.50000 68.16667 68.16667 68.16667 68.16667 66.66667\n[3577] 66.66667 66.66667 66.66667 64.66667 64.66667 64.66667 64.66667 63.41667\n[3585] 63.41667 63.41667 63.41667 63.41667 65.00000 65.00000 65.00000 65.00000\n[3593] 65.91667 65.91667 65.91667 65.91667 66.58333 66.58333 66.58333 66.58333\n[3601] 65.91667 65.91667 65.91667 65.91667 65.91667 61.83333 62.33333 62.33333\n[3609] 62.33333 62.33333 62.33333 65.58333 65.58333 65.58333 65.58333 67.25000\n[3617] 67.25000 67.25000 67.25000 67.66667 67.66667 67.66667 67.66667 68.00000\n[3625] 68.00000 68.00000 68.00000 68.00000 67.16667 67.16667 67.16667 67.16667\n[3633] 66.16667 66.16667 66.16667 66.16667 65.25000 65.25000 65.25000 65.25000\n[3641] 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667\n[3649] 64.66667 62.91667 62.91667 62.91667 62.91667 63.33333 63.33333 63.33333\n[3657] 63.33333 63.16667 63.16667 63.16667 63.16667 62.83333 62.33333 62.33333\n[3665] 62.33333 62.33333 62.33333 65.58333 65.58333 65.58333 65.58333 67.25000\n[3673] 67.25000 67.25000 67.25000 67.66667 67.66667 67.66667 67.66667 68.00000\n[3681] 68.00000 68.00000 68.00000 68.00000 67.16667 67.16667 67.16667 67.16667\n[3689] 66.16667 66.16667 66.16667 66.16667 65.25000 65.25000 65.25000 65.25000\n[3697] 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667\n[3705] 64.66667 62.91667 62.91667 62.91667 62.91667 63.33333 63.33333 63.33333\n[3713] 63.33333 63.16667 63.16667 63.16667 63.16667 62.83333 62.83333 62.33333\n[3721] 62.33333 62.33333 62.33333 62.33333 65.58333 65.58333 65.58333 65.58333\n[3729] 67.25000 67.25000 67.25000 67.25000 67.66667 67.66667 67.66667 67.66667\n[3737] 68.00000 68.00000 68.00000 68.00000 68.00000 67.16667 67.16667 67.16667\n[3745] 67.16667 66.16667 66.16667 66.16667 66.16667 65.25000 65.25000 65.25000\n[3753] 65.25000 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667\n[3761] 64.66667 64.66667 62.91667 62.91667 62.91667 62.91667 63.33333 63.33333\n[3769] 63.33333 63.33333 63.16667 63.16667 63.16667 63.16667 62.83333 62.83333\n[3777] 62.83333 62.83333 62.33333 62.33333 62.33333 62.33333 62.33333 65.58333\n[3785] 65.58333 65.58333 65.58333 67.25000 67.25000 67.25000 67.25000 67.66667\n[3793] 67.66667 67.66667 67.66667 68.00000 68.00000 68.00000 68.00000 68.00000\n[3801] 67.16667 67.16667 67.16667 67.16667 66.16667 66.16667 66.16667 66.16667\n[3809] 65.25000 65.25000 65.25000 65.25000 64.66667 64.66667 64.66667 64.66667\n[3817] 64.66667 64.66667 64.66667 64.66667 64.66667 62.91667 62.91667 62.91667\n[3825] 62.91667 63.33333 63.33333 63.33333 63.33333 63.16667 63.16667 63.16667\n[3833] 63.16667 63.16667 62.83333 62.83333 62.83333 62.83333 62.33333 62.33333\n[3841] 62.33333 62.33333 62.33333 65.58333 65.58333 65.58333 65.58333 67.25000\n[3849] 67.25000 67.25000 67.25000 67.66667 67.66667 67.66667 67.66667 68.00000\n[3857] 68.00000 68.00000 68.00000 68.00000 67.16667 67.16667 67.16667 67.16667\n[3865] 66.16667 66.16667 66.16667 66.16667 65.25000 65.25000 65.25000 65.25000\n[3873] 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667\n[3881] 64.66667 62.91667 62.91667 62.91667 62.91667 63.33333 63.33333 63.33333\n[3889] 63.33333 63.16667 63.16667 63.16667 63.16667 63.16667       NA 62.83333\n[3897] 62.83333 62.83333 62.83333 62.33333 62.33333 62.33333 62.33333 62.33333\n[3905] 65.58333 65.58333 65.58333 65.58333 67.25000 67.25000 67.25000 67.25000\n[3913] 67.66667 67.66667 67.66667 67.66667 68.00000 68.00000 68.00000 68.00000\n[3921] 68.00000 67.16667 67.16667 67.16667 67.16667 66.16667 66.16667 66.16667\n[3929] 66.16667 65.25000 65.25000 65.25000 65.25000 64.66667 64.66667 64.66667\n[3937] 64.66667 64.66667 64.66667 64.66667 64.66667 64.66667 62.91667 62.91667\n[3945] 62.91667 62.91667 63.33333 63.33333 63.33333 63.33333 63.16667 63.16667\n[3953] 63.16667 63.16667 63.16667 62.50000 63.91667 64.00000 64.00000 64.00000\n[3961] 64.00000 64.91667 64.91667 64.91667 64.91667 64.91667 65.91667 65.91667\n[3969] 65.91667 65.91667 65.83333 65.83333 65.83333 65.83333 65.91667 65.91667\n[3977] 65.91667 65.91667 67.00000 67.00000 67.00000 67.00000 67.00000 67.91667\n[3985] 67.91667 67.91667 67.91667 66.58333 66.58333 66.58333 66.58333 66.16667\n[3993] 66.16667 66.16667 66.16667 64.41667 64.41667 64.41667 64.41667 64.41667\n[4001] 63.91667 63.91667 63.91667 63.91667 62.83333 62.83333 62.83333 62.83333\n[4009] 62.58333 62.58333 62.58333 62.58333 62.83333 62.83333 62.83333 62.83333\n[4017] 62.83333 61.50000 61.50000 61.41667 63.91667 63.91667 64.00000 64.00000\n[4025] 64.00000 64.00000 64.91667 64.91667 64.91667 64.91667 64.91667 65.91667\n[4033] 65.91667 65.91667 65.91667 65.83333 65.83333 65.83333 65.83333 65.91667\n[4041] 65.91667 65.91667 65.91667 67.00000 67.00000 67.00000 67.00000 67.00000\n[4049] 67.91667 67.91667 67.91667 67.91667 66.58333 66.58333 66.58333 66.58333\n[4057] 66.16667 66.16667 66.16667 66.16667 64.41667 64.41667 64.41667 64.41667\n[4065] 64.41667 63.91667 63.91667 63.91667 63.91667 62.83333 62.83333 62.83333\n[4073] 62.83333 62.58333 62.58333 62.58333 62.58333 62.83333 62.83333 62.83333\n[4081] 62.83333 62.83333 61.50000 61.50000 61.41667 61.41667 63.91667 63.91667\n[4089] 63.91667 63.91667 64.00000 64.00000 64.00000 64.00000 64.91667 64.91667\n[4097] 64.91667 64.91667 64.91667 65.91667 65.91667 65.91667 65.91667 65.83333\n[4105] 65.83333 65.83333 65.83333 65.91667 65.91667 65.91667 65.91667 67.00000\n[4113] 67.00000 67.00000 67.00000 67.00000 67.91667 67.91667 67.91667 67.91667\n[4121] 66.58333 66.58333 66.58333 66.58333 66.16667 66.16667 66.16667 66.16667\n[4129] 64.41667 64.41667 64.41667 64.41667 64.41667 63.91667 63.91667 63.91667\n[4137] 63.91667 62.83333 62.83333 62.83333 62.83333 62.58333 62.58333 62.58333\n[4145] 62.58333 62.83333 62.83333 62.83333 62.83333 62.83333 61.50000 61.50000\n[4153] 61.50000 61.41667 61.41667 61.41667 63.91667 63.91667 63.91667 63.91667\n[4161] 64.00000 64.00000 64.00000 64.00000 64.91667 64.91667 64.91667 64.91667\n[4169] 64.91667 65.91667 65.91667 65.91667 65.91667 65.83333 65.83333 65.83333\n[4177] 65.83333 65.91667 65.91667 65.91667 65.91667 67.00000 67.00000 67.00000\n[4185] 67.00000 67.00000 67.91667 67.91667 67.91667 67.91667 66.58333 66.58333\n[4193] 66.58333 66.58333 66.16667 66.16667 66.16667 66.16667 64.41667 64.41667\n[4201] 64.41667 64.41667 64.41667 63.91667 63.91667 63.91667 63.91667 62.83333\n[4209] 62.83333 62.83333 62.83333 62.58333 62.58333 62.58333 62.58333 62.83333\n[4217] 62.83333 62.83333 62.83333 62.83333 61.50000 61.50000 61.50000 61.50000\n[4225] 61.41667 61.41667 61.41667 61.41667 63.91667 63.91667 63.91667 63.91667\n[4233] 64.00000 64.00000 64.00000 64.00000 64.91667 64.91667 64.91667 64.91667\n[4241] 64.91667 65.91667 65.91667 65.91667 65.91667 65.83333 65.83333 65.83333\n[4249] 65.83333 65.91667 65.91667 65.91667 65.91667 67.00000 67.00000 67.00000\n[4257] 67.00000 67.00000 67.91667 67.91667 67.91667 67.91667 66.58333 66.58333\n[4265] 66.58333 66.58333 66.16667 66.16667 66.16667 66.16667 64.41667 64.41667\n[4273] 64.41667 64.41667 64.41667 63.91667 63.91667 63.91667 63.91667 62.83333\n[4281] 62.83333 62.83333 62.83333 62.58333 62.58333 62.58333 62.58333 62.83333\n[4289] 62.83333 62.83333 62.83333 62.83333 61.50000 61.50000 61.50000 61.50000\n[4297] 60.83333 64.33333 64.33333 64.33333 64.33333 63.08333 63.08333 63.08333\n[4305] 63.08333 65.16667 65.16667 65.16667 65.16667 66.66667 66.66667 66.66667\n[4313] 66.66667 66.66667 66.58333 66.58333 66.58333 66.58333 65.91667 65.91667\n[4321] 65.91667 65.91667 66.83333 66.83333 66.83333 66.83333 67.58333 67.58333\n[4329] 67.58333 67.58333 67.58333 67.83333 67.83333 67.83333 66.83333 66.83333\n[4337] 66.83333 66.83333 65.83333 65.83333 65.83333 65.83333 64.33333 64.33333\n[4345] 64.33333 64.33333 64.33333 64.41667 64.41667 64.41667 64.41667 63.08333\n[4353] 63.08333 63.08333 63.08333 61.41667 61.41667 61.41667 61.41667 61.41667\n[4361] 61.41667 61.41667 61.41667 61.41667 61.25000 61.25000 61.25000 61.25000\n[4369] 61.16667 63.83333 64.33333 64.33333 64.33333 64.33333 63.08333 63.08333\n[4377] 63.08333 63.08333 65.16667 65.16667 65.16667 65.16667 66.66667 66.66667\n[4385] 66.66667 66.66667 66.66667 66.58333 66.58333 66.58333 66.58333 65.91667\n[4393] 65.91667 65.91667 65.91667 66.83333 66.83333 66.83333 67.58333 67.58333\n[4401] 67.58333 67.83333 66.83333 66.83333 66.83333 66.83333 65.83333 65.83333\n[4409] 64.33333 64.33333 64.33333 64.33333 64.33333 64.41667 64.41667 64.41667\n[4417] 64.41667 63.08333 63.08333 63.08333 63.08333 61.41667 61.41667 61.41667\n[4425] 61.41667 61.41667 61.41667 61.41667 61.41667 61.41667 61.25000 61.25000\n[4433] 61.25000 61.25000 61.16667 63.83333 64.33333 64.33333 64.33333 64.33333\n[4441] 63.08333 63.08333 63.08333 63.08333 65.16667 65.16667 65.16667 65.16667\n[4449] 66.66667 66.66667 66.66667 66.66667 66.66667 66.58333 66.58333 66.58333\n[4457] 66.58333 65.91667 65.91667 65.91667 65.91667 66.83333 66.83333 67.58333\n[4465] 67.58333 67.58333 67.58333 66.83333 66.83333 66.83333 65.83333 64.33333\n[4473] 64.33333 64.33333 64.33333 64.33333 64.41667 64.41667 64.41667 64.41667\n[4481] 63.08333 63.08333 63.08333 63.08333 61.41667 61.41667 61.41667 61.41667\n[4489] 61.41667 61.41667 61.41667 61.41667 61.41667 61.25000 61.25000 61.25000\n[4497] 61.25000 61.16667 63.83333 64.33333 64.33333 64.33333 64.33333 63.08333\n[4505] 63.08333 63.08333 63.08333 65.16667 65.16667 65.16667 65.16667 66.66667\n[4513] 66.66667 66.66667 66.66667 66.66667 66.58333 66.58333 66.58333 66.58333\n[4521] 65.91667 65.91667 65.91667 65.91667 66.83333 66.83333 67.83333 67.83333\n[4529] 66.83333 66.83333 66.83333 65.83333 65.83333 64.33333 64.33333 64.33333\n[4537] 64.33333 64.33333 64.41667 64.41667 64.41667 64.41667 63.08333 63.08333\n[4545] 63.08333 63.08333 61.41667 61.41667 61.41667 61.41667 61.41667 61.41667\n[4553] 61.41667 61.41667 61.41667 61.25000 61.25000 61.25000 61.25000 61.16667\n[4561] 64.33333 64.33333 64.33333 64.33333 63.08333 63.08333 63.08333 63.08333\n[4569] 65.16667 65.16667 65.16667 65.16667 66.66667 66.66667 66.66667 66.66667\n[4577] 66.66667 66.58333 66.58333 66.58333 66.58333 65.91667 65.91667 65.91667\n[4585] 65.91667 66.83333 66.83333 65.83333 65.83333 64.33333 64.33333 64.33333\n[4593] 64.33333 64.33333 64.41667 64.41667 64.41667 64.41667 63.08333 63.08333\n[4601] 63.08333 63.08333 61.41667 61.41667 61.41667 61.41667 61.41667 61.41667\n[4609] 61.41667 61.41667 61.41667 61.25000 61.25000 61.25000 61.25000 61.16667\n[4617] 64.33333 64.33333 64.33333 63.08333 63.08333 63.08333 63.08333 65.16667\n[4625] 65.16667 65.16667 65.16667 66.66667 66.66667 66.66667 66.66667 66.66667\n[4633] 66.58333 66.58333 66.58333 66.58333 65.91667 65.91667 66.83333 65.83333\n[4641] 64.33333 64.33333 64.33333 64.33333 64.33333 64.41667 64.41667 64.41667\n[4649] 64.41667 63.08333 63.08333 63.08333 63.08333 61.41667 61.41667 61.41667\n[4657] 61.41667 61.41667 61.41667 61.41667 61.41667 61.41667 61.25000 61.25000\n[4665] 61.25000 61.25000 61.16667 66.50000 66.50000 66.50000 66.58333 66.58333\n[4673] 66.58333 66.58333 64.08333 64.08333 64.08333 64.08333 64.41667 64.41667\n[4681] 64.41667 64.41667 64.41667 66.41667 66.41667 66.41667 66.41667 66.33333\n[4689] 66.25000 66.25000 66.25000 66.25000 66.25000 64.75000 64.75000 64.75000\n[4697] 64.75000 61.00000 61.00000 61.00000 61.00000 60.16667 60.16667 60.16667\n[4705] 60.16667 61.00000 61.00000 61.00000 61.00000 61.00000 61.16667 61.16667\n[4713] 61.16667 61.16667 66.50000 66.50000 66.50000 66.58333 66.58333 66.58333\n[4721] 66.58333 64.08333 64.08333 64.08333 64.08333 64.41667 64.41667 64.41667\n[4729] 64.41667 64.41667 66.41667 66.41667 66.41667 66.41667 66.25000 66.25000\n[4737] 66.25000 64.75000 64.75000 64.75000 64.75000 61.00000 61.00000 61.00000\n[4745] 61.00000 60.16667 60.16667 60.16667 60.16667 61.00000 61.00000 61.00000\n[4753] 61.00000 61.00000 61.16667 61.16667 61.16667 66.50000 66.50000 66.50000\n[4761] 64.08333 64.08333 64.08333 64.41667 64.41667 64.41667 64.41667 64.41667\n[4769] 66.41667 66.41667 66.41667 66.25000 66.25000 66.25000 64.75000 64.75000\n[4777] 61.00000 61.00000 61.00000 60.16667 60.16667 60.16667 60.16667 61.00000\n[4785] 61.00000 61.00000 61.00000 61.00000 61.16667 61.16667 61.16667 66.50000\n[4793] 66.50000 64.08333 64.41667 64.41667 64.41667 64.41667 64.41667 66.41667\n[4801] 61.00000 61.00000 61.00000 60.16667 60.16667 60.16667 60.16667 61.00000\n[4809] 61.00000 61.00000 61.00000 61.00000 61.16667 61.16667 64.08333 64.41667\n[4817] 64.41667 64.41667 61.00000 61.00000 60.16667 60.16667 60.16667 60.16667\n[4825] 61.00000 61.00000 61.00000 61.00000 61.00000 61.16667 60.16667 60.16667\n[4833] 60.16667 60.16667 61.00000 61.00000 61.00000 61.00000 61.00000 61.16667\n[4841] 61.16667 61.16667 60.00000 60.91667 60.91667 60.91667 60.91667 60.91667\n[4849] 59.91667 59.91667 59.91667 59.91667 60.91667 60.91667 60.91667 60.91667\n[4857] 59.91667 59.91667 60.91667 60.91667 60.91667 60.91667 60.91667 59.91667\n[4865] 60.91667 60.91667 60.91667 60.91667 60.00000 60.91667 60.91667 60.00000\n[4873] 60.91667 60.91667 62.83333 62.83333 65.08333 65.08333 62.83333 62.83333\n[4881] 65.08333 65.08333 65.08333 65.08333 65.08333 62.83333 62.83333 65.08333\n[4889] 65.08333 65.08333 65.08333 65.08333 62.83333 62.83333 62.83333 65.08333\n[4897] 65.08333 65.08333 65.08333 65.08333 65.16667 65.16667 62.83333 62.83333\n[4905] 62.83333 62.83333 65.08333 65.08333 65.08333 65.08333 65.08333 65.16667\n[4913] 65.16667 62.83333 62.83333 62.83333 62.83333 65.08333 65.08333 65.08333\n[4921] 65.08333 65.08333 65.16667 68.25000 68.25000 68.25000 68.25000 74.00000\n[4929] 74.00000 74.00000 74.00000 74.00000 68.25000 68.25000 68.25000 74.00000\n[4937] 74.00000 74.00000 74.00000 68.25000 74.00000 74.00000 74.00000 74.00000\n```\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = air_sf, aes(col = Value)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-data-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = air_sf, aes(col = covtemp)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-data-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = air_sf, aes(col = covprec)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-data-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = dp, aes(col = covtemp)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-data-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = dp, aes(col = covprec)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/process-data-2-5.png){width=672}\n:::\n:::\n\n\nLooks like there is a couple of nans in there. Let's impute using the mean.\n\n::: {.cell}\n\n```{.r .cell-code}\ndp <- dp %>% mutate(covprec=ifelse(is.na(covprec), mean(covprec, na.rm=TRUE), covprec),\n                    covtemp=ifelse(is.na(covtemp), mean(covtemp, na.rm=TRUE), covtemp))\nggplot() + geom_sf(data = map) +\n  geom_sf(data = dp, aes(col = covtemp)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/imputation-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + geom_sf(data = map) +\n  geom_sf(data = dp, aes(col = covprec)) +\n  scale_color_viridis()\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/imputation-2.png){width=672}\n:::\n:::\n\nSaw in the forum <https://groups.google.com/g/r-inla-discussion-group/c/z_v2oIh2egs> it's good to work with units of kilometers which is intuitive from previous spatial data work.\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(\"EPSG:3857\")$proj4string\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\"\n```\n:::\n\n```{.r .cell-code}\nprojMercator<-\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0\n+x_0=0 +y_0=0 +k=1 +units=km +nadgrids=@null +wktext +no_defs\"\nair_sf_project <- st_transform(air_sf, crs = projMercator)\ndp <- st_transform(dp, crs = projMercator)\n# Observed coordinates\ncoo <- st_coordinates(air_sf_project)\n\n# Predicted coordinates\ncoop <- st_coordinates(dp)\nsummary(dist(coo)) # summary of distances between locations\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  0.5852  70.0344 109.2560 131.9875 179.8815 472.4047 \n```\n:::\n:::\n\nMesh options are from <https://punama.github.io/BDI_INLA/#:~:text=stack%20function.,list%20of%20effects%20(effects).>\n```max.edge``` controls the largest triangle edge length, and providing it with a vector ```c(inner, outer)``` sets the max edge for inside the boundary and outside the boundary. The purpose of this is to avoid boundary effects in the estimation of the model, where boundary values have high variance. Lindgren and Rue (2015) suggest to extend the domain by some amount. This is briefly discussed in the book by Blangiardo (2015).\n\n```cutoff``` is the minimum allowed distance between points. Otherwise, points are replaced by a single vertex. For areas of high clusters of points, this could be useful to reduce redundancy. If no ```boundary``` is set the mesh is created on the convex hull of the observations.\n\nThis was inspired from <https://punama.github.io/BDI_INLA/>. Thanks!\n::: {.cell}\n\n```{.r .cell-code}\nmesh0 <- inla.mesh.2d(loc = coo, max.edge=c(200, 500))\nmesh1 <- inla.mesh.2d(loc = coo, max.edge=c(200, 500), cutoff=1)\nmesh2 <- inla.mesh.2d(loc = coo, max.edge=c(100, 150), cutoff=1)\nmesh3 <- inla.mesh.2d(loc = coo, max.edge=c(100), cutoff=1)\nmesh4 <- inla.mesh.2d(loc = coo, max.edge=c(500, 750))\nmesh5 <- inla.mesh.2d(loc = coo, max.edge=c(500, 750), cutoff=1)\nplot(mesh0)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mesh1)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mesh2)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mesh3)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mesh4)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-5.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(mesh5)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-mesh-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Using mesh0\nmesh <-inla.mesh.2d(loc = coo, max.edge=c(200, 500), crs=st_crs(air_sf_project))\nmesh$n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 280\n```\n:::\n:::\n\nNext we construct the A matrix that \"A that projects the GRF from the observations to the vertices of the triangulated mesh.\" (Moraga 2024). \nThis A matrix has a row for each ovservation, and columns equal to the number of vertices in the mesh. That is shown above, with ```mesh$n```. Below, two different meshes are generated. One for the observation locations, and one for the prediction locations. We need to set these both at once, because to make predictions in INLA we have to have that all pre-specified, unlike with the typical modelling style in R.\n\nAdditionally, the index allows us to extract fitted values from the model.\n\nThe smoothness parameter is set to 1, where in the spatial case $d=2$ and $\\alpha=\\nu + d/2 = 2$, seen in the code below.\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mesh)\npoints(coo, col = \"red\")\naxis(1)\naxis(2)\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inla-A-1.png){width=672}\n:::\n\n```{.r .cell-code}\nspde <- inla.spde2.matern(mesh = mesh, alpha = 2, constr = TRUE)\nindexs <- inla.spde.make.index(\"s\", spde$n.spde)\nlengths(indexs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      s s.group  s.repl \n    280     280     280 \n```\n:::\n\n```{.r .cell-code}\n# Make the projection matrices\nA <- inla.spde.make.A(mesh = mesh, loc = coo)\nAp <- inla.spde.make.A(mesh = mesh, loc = coop)\ndim(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  52 280\n```\n:::\n\n```{.r .cell-code}\ndim(Ap)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4944  280\n```\n:::\n:::\nThen we have to make the INLA stack. This is done because we need to combine the data for estimation with the prediction data, as well as the projection matrices. It contains the response data, the list of covariate data--here the temperature and precipitation--the projection matrices, and the indices.\n\n::: {.cell}\n\n```{.r .cell-code}\n# stack for estimation stk.e\nstk.e <- inla.stack(tag = \"est\",\ndata = list(y = air_sf_project$Value), A = list(1, A),\neffects = list(data.frame(b0 = rep(1, nrow(A)),\ncovtemp = air_sf_project$covtemp, covprec = air_sf_project$covprec),\ns = indexs))\n#stk.e\n\n# stack for prediction stk.p\nstk.p <- inla.stack(tag = \"pred\",\ndata = list(y = NA), A = list(1, Ap),\neffects = list(data.frame(b0 = rep(1, nrow(Ap)),\ncovtemp = dp$covtemp, covprec = dp$covprec),\ns = indexs))\n#stk.p\n\n# stk.full has stk.e and stk.p\nstk.full <- inla.stack(stk.e, stk.p)\n```\n:::\nFinally, we can specify the model in INLA. All the hard work has been done above and at least the model specification in INLA is easier. This model has mean specified by\n$$\n\\mu_i = \\beta_0 + \\beta_1 \\times \\text{temp}_i + \\beta_2 \\times \\text{prec}_i + S(x_i),\n$$\nso there is some contribution from fixed effects as well as a unknown latent process modelled as a zero-mean Gaussian Random Field with Matern covariance function. This puts us well within INLA territory. The model equation can be seen quite clearly in the ```formula``` variable below.\n\n::: {.cell}\n\n```{.r .cell-code}\nformula <- y ~ 0 + b0 + covtemp + covprec + f(s, model = spde)\nres <- inla(formula, family = \"gaussian\",\n       data = inla.stack.data(stk.full),\n       control.predictor = list(compute = TRUE,\n                                A = inla.stack.A(stk.full)),\n       control.compute = list(return.marginals.predictor = TRUE))\n```\n:::\nNotice that I am passing a few options to the ```inla``` call. Importantly, ```control.compute```. We have a nice description of the control options at <https://becarioprecario.bitbucket.io/inla-gitbook/ch-INLA.html#sec:controlops>. It controls what quantities are actually computed and returned during the INLA estimation. For example, there are a few different information criteria that it can return.\n\n```control.predictor``` will compute the posterior marginals of the parameters.\n\nThe options:\n::: {.cell}\n\n```{.r .cell-code}\ninla.set.control.compute.default()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$openmp.strategy\n[1] \"default\"\n\n$hyperpar\n[1] TRUE\n\n$return.marginals\n[1] TRUE\n\n$return.marginals.predictor\n[1] FALSE\n\n$dic\n[1] FALSE\n\n$mlik\n[1] TRUE\n\n$cpo\n[1] FALSE\n\n$po\n[1] FALSE\n\n$waic\n[1] FALSE\n\n$residuals\n[1] FALSE\n\n$q\n[1] FALSE\n\n$config\n[1] FALSE\n\n$likelihood.info\n[1] FALSE\n\n$smtp\nNULL\n\n$graph\n[1] FALSE\n\n$internal.opt\nNULL\n\n$save.memory\nNULL\n\n$control.gcpo\n$enable\n[1] FALSE\n\n$num.level.sets\n[1] -1\n\n$size.max\n[1] 32\n\n$strategy\n[1] \"posterior\" \"prior\"    \n\n$groups\nNULL\n\n$selection\nNULL\n\n$group.selection\nNULL\n\n$friends\nNULL\n\n$weights\nNULL\n\n$verbose\n[1] FALSE\n\n$epsilon\n[1] 0.005\n\n$prior.diagonal\n[1] 1e-04\n\n$correct.hyperpar\n[1] TRUE\n\n$keep\nNULL\n\n$remove\nNULL\n\n$remove.fixed\n[1] TRUE\n\nattr(,\"class\")\n[1] \"ctrl_gcpo\"        \"inla_ctrl_object\"\n\nattr(,\"class\")\n[1] \"ctrl_compute\"     \"inla_ctrl_object\"\n```\n:::\n:::\nOnce the model is fit, we can inspect the fixed parameters and estimated latent field, as well as the hyperparameters for the latent field.\n::: {.cell}\n\n```{.r .cell-code}\nres$summary.fixed\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                mean         sd  0.025quant     0.5quant 0.975quant\nb0      -15.29769449 21.3472625 -57.7595559 -15.17245556 26.4583704\ncovtemp   2.17003514  2.0949918  -1.8002534   2.09513247  6.5392273\ncovprec  -0.01550201  0.2034683  -0.4214077  -0.01404086  0.3818577\n                mode          kld\nb0      -15.17140288 4.819848e-08\ncovtemp   2.09359434 3.231952e-07\ncovprec  -0.01411427 5.717319e-08\n```\n:::\n\n```{.r .cell-code}\n# Latent field is here\n# res$summary.random$s\n# res$summary.hyperpar\n\nindex <- inla.stack.index(stack = stk.full, tag = \"pred\")$data\npred_mean <- res$summary.fitted.values[index, \"mean\"]\npred_ll <- res$summary.fitted.values[index, \"0.025quant\"]\npred_ul <- res$summary.fitted.values[index, \"0.975quant\"]\ngrid$mean <- NA\ngrid$ll <- NA\ngrid$ul <- NA\n\nlength(pred_mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4944\n```\n:::\n\n```{.r .cell-code}\nlength(indicespointswithin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4944\n```\n:::\n\n```{.r .cell-code}\ngrid$mean[indicespointswithin] <- pred_mean\ngrid$ll[indicespointswithin] <- pred_ll\ngrid$ul[indicespointswithin] <- pred_ul\n  \nsummary(grid) # negative values for the lower limit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mean             ll               ul        \n Min.   :1.338   Min.   :-4.722   Min.   : 3.733  \n 1st Qu.:3.626   1st Qu.: 0.359   1st Qu.: 6.530  \n Median :4.665   Median : 1.462   Median : 7.813  \n Mean   :4.595   Mean   : 1.368   Mean   : 7.874  \n 3rd Qu.:5.553   3rd Qu.: 2.405   3rd Qu.: 9.087  \n Max.   :8.316   Max.   : 6.753   Max.   :12.860  \n NA's   :5056    NA's   :5056     NA's   :5056    \n```\n:::\n\n```{.r .cell-code}\nlibrary(rasterVis)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nlevelplot(grid, layout = c(1, 3),\nnames.attr = c(\"Mean\", \"2.5 percentile\", \"97.5 percentile\"))\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/inspect-fit-1.png){width=672}\n:::\n:::\n\nWhen ```compute=TRUE``` in ```control.predictor```, we can also obtain the output below. <https://www.paulamoraga.com/book-geospatial/sec-inla.html> is good for info about this.\n::: {.cell}\n\n```{.r .cell-code}\nres$summary.fitted.values\nres$summary.linear.predictor\n```\n:::\nas well as ```marginals.linear.predictor``` and ```marginals.fitted.values```.\n\nFrom <https://becarioprecario.bitbucket.io/inla-gitbook/ch-INLA.html#model-fitting-strategies> \nwe can also see the differences using the different fitting strategies, set by the ```control.inla``` argument.\n\nWe can change both the Gaussian approximation strategy for the posterior full conditional distributions, as well as the integration strategy used to integrate out the $\\theta_{-k}$ parameters to get the marginal distribution for $\\theta_k$. \n\nThe ```\"grid\"``` option is the most costly, compared to the central composite design (```\"ccd\"```). In the empirical bayes option (```\"eb\"```), the posterior mode is used as the integration point.\n\n::: {.cell}\n\n```{.r .cell-code}\napprox_strategy <- c(\"gaussian\", \"simplified.laplace\", \"laplace\")\nint_strategy <- c(\"ccd\", \"grid\", \"eb\")\nmodels <- c(\"iid\", \"matern\")\nfits <- matrix(nrow=length(approx_strategy)*length(int_strategy)*length(models), ncol=3)\nfits_marginals <- vector(mode=\"list\", length=length(approx_strategy)*length(int_strategy)*length(models))\nindex_f <- 0\nmodel_names <- c()\nfor (m in models){\n  for(a in approx_strategy){\n    for (i in int_strategy){\n      index_f <- index_f + 1\n      if (m==\"matern\"){\n        formula_approx <- y ~ 0 + b0 + covtemp + covprec + f(s, model = spde)\n      }\n      else{\n        formula_approx <- y ~ 0 + b0 + covtemp + covprec + f(s, model = \"iid\")\n      }\n      print(paste(a, \", \", i, \", \", m))\n      model_names <- c(model_names, paste(a, \", \", i, \", \", m))\n      fit_approx <- inla(formula, family = \"gaussian\",\n         data = inla.stack.data(stk.full),\n         control.inla = list(strategy = a, int.strategy = i),\n         control.compute = list(cpo = TRUE, dic = TRUE, waic = TRUE),\n         control.predictor = list(compute = TRUE, A = inla.stack.A(stk.full)))\n      fits[index_f,] <- fit_approx$summary.fixed$mean\n      fits_marginals[[index_f]] <- fit_approx$marginals.fixed$b0\n  }\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"gaussian ,  ccd ,  iid\"\n[1] \"gaussian ,  grid ,  iid\"\n[1] \"gaussian ,  eb ,  iid\"\n[1] \"simplified.laplace ,  ccd ,  iid\"\n[1] \"simplified.laplace ,  grid ,  iid\"\n[1] \"simplified.laplace ,  eb ,  iid\"\n[1] \"laplace ,  ccd ,  iid\"\n[1] \"laplace ,  grid ,  iid\"\n[1] \"laplace ,  eb ,  iid\"\n[1] \"gaussian ,  ccd ,  matern\"\n[1] \"gaussian ,  grid ,  matern\"\n[1] \"gaussian ,  eb ,  matern\"\n[1] \"simplified.laplace ,  ccd ,  matern\"\n[1] \"simplified.laplace ,  grid ,  matern\"\n[1] \"simplified.laplace ,  eb ,  matern\"\n[1] \"laplace ,  ccd ,  matern\"\n[1] \"laplace ,  grid ,  matern\"\n[1] \"laplace ,  eb ,  matern\"\n```\n:::\n:::\nLet's compare the means of the parameters\n::: {.cell}\n\n```{.r .cell-code}\nfits_df <- as.data.frame(fits)\nnames(fits_df) <- c(\"b0\", \"covtemp\", \"covprec\")\nfits_df$models <- model_names\nfits_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          b0  covtemp     covprec                               models\n1  -13.85789 2.049883 -0.01973532               gaussian ,  ccd ,  iid\n2  -15.29769 2.170035 -0.01550201              gaussian ,  grid ,  iid\n3  -13.11329 1.992509 -0.02262044                gaussian ,  eb ,  iid\n4  -13.85789 2.049883 -0.01973532     simplified.laplace ,  ccd ,  iid\n5  -15.29769 2.170035 -0.01550201    simplified.laplace ,  grid ,  iid\n6  -13.11329 1.992509 -0.02262044      simplified.laplace ,  eb ,  iid\n7  -13.85789 2.049883 -0.01973532                laplace ,  ccd ,  iid\n8  -15.29769 2.170035 -0.01550201               laplace ,  grid ,  iid\n9  -13.11329 1.992509 -0.02262044                 laplace ,  eb ,  iid\n10 -13.85789 2.049883 -0.01973532            gaussian ,  ccd ,  matern\n11 -15.29769 2.170035 -0.01550201           gaussian ,  grid ,  matern\n12 -13.11329 1.992509 -0.02262044             gaussian ,  eb ,  matern\n13 -13.85789 2.049883 -0.01973532  simplified.laplace ,  ccd ,  matern\n14 -15.29769 2.170035 -0.01550201 simplified.laplace ,  grid ,  matern\n15 -13.11329 1.992509 -0.02262044   simplified.laplace ,  eb ,  matern\n16 -13.85789 2.049883 -0.01973532             laplace ,  ccd ,  matern\n17 -15.29769 2.170035 -0.01550201            laplace ,  grid ,  matern\n18 -13.11329 1.992509 -0.02262044              laplace ,  eb ,  matern\n```\n:::\n:::\nAlso compare the posteriors themselves\n::: {.cell}\n\n```{.r .cell-code}\n# Combine dataframes\ndf_list <- lapply(fits_marginals, function(m) {\n  data.frame(x = m[,1], y = m[,2]) \n})\nnew_df <- do.call(rbind, df_list) \n# Add an ID column\nrow_counts <- sapply(fits_marginals, nrow)\nids <- factor(rep(1:length(fits_marginals), each = row_counts))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in rep(1:length(fits_marginals), each = row_counts): first element used\nof 'each' argument\n```\n:::\n\n```{.r .cell-code}\nnew_df$id <- ids\nlength(ids)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 774\n```\n:::\n\n```{.r .cell-code}\nnew_df <- new_df[1:86,]\nggplot(new_df, aes(x = x, y = y, colour = id)) + \n  geom_line() \n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/compare-marginals-1.png){width=672}\n:::\n:::\nWow so with this data set there is not really much different between meshes or with estimation methods.\n\nAnother useful feature is the set of functions that can be used to manipulate the marginal distributions. Might be useful to compute posterior quantities such as KL divergence: <https://becarioprecario.bitbucket.io/inla-gitbook/ch-INLA.html#sec:marginals>\n\nAgain from <https://www.paulamoraga.com/book-geospatial/sec-inla.html> is helpful.\n\n::: {.cell}\n\n```{.r .cell-code}\ninla.mmarginal(res$marginals.fixed$b0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -14.90955\n```\n:::\n\n```{.r .cell-code}\n# Should be the same?\nres$summary.fixed$mode[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -15.1714\n```\n:::\n:::\nNext, let's write that model in INLABRU and check if the estimates are the same. Then, we also look at how to fit the LGCP in INLA/INLABRU. \n\nWne can use the same mesh and spde function as we used before. And also the same formula! (I think). But what is especially nice about INLABRU is that we don't have to set up the stack with the projection matrices. We just model the response variable as a function of the covariates in the dataset we set up earlier and the locations of the observations. In INLABRU, we can use the sf dataset object directly.\n\nINLA \n::: {.cell}\n\n```{.r .cell-code}\nformula <- Value ~ Intercept(1) + covtemp + covprec + f(geometry, model = spde)\n# Fit the model for inlabru\nfit <- bru(formula, data = air_sf_project, family = \"gaussian\")\n# Summarize the results\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninlabru version: 2.12.0\nINLA version: 24.05.01-1\nComponents:\nIntercept: main = linear(1), group = exchangeable(1L), replicate = iid(1L), NULL\ncovtemp: main = linear(covtemp), group = exchangeable(1L), replicate = iid(1L), NULL\ncovprec: main = linear(covprec), group = exchangeable(1L), replicate = iid(1L), NULL\nf: main = spde(geometry), group = exchangeable(1L), replicate = iid(1L), NULL\nLikelihoods:\n  Family: 'gaussian'\n    Tag: ''\n    Data class: 'sf', 'grouped_df', 'tbl_df', 'tbl', 'data.frame'\n    Response class: 'numeric'\n    Predictor: Value ~ .\n    Used components: effects[Intercept, covtemp, covprec, f], latent[]\nTime used:\n    Pre = 1.82, Running = 0.739, Post = 0.314, Total = 2.87 \nFixed effects:\n             mean     sd 0.025quant 0.5quant 0.975quant    mode kld\nIntercept -15.298 21.347    -57.760  -15.172     26.458 -15.171   0\ncovtemp     2.170  2.095     -1.800    2.095      6.539   2.094   0\ncovprec    -0.016  0.203     -0.421   -0.014      0.382  -0.014   0\n\nRandom effects:\n  Name\t  Model\n    f SPDE2 model\n\nModel hyperparameters:\n                                          mean    sd 0.025quant 0.5quant\nPrecision for the Gaussian observations  0.308 0.080      0.177    0.299\nTheta1 for f                             1.928 0.531      0.908    1.920\nTheta2 for f                            -4.134 0.692     -5.533   -4.122\n                                        0.975quant   mode\nPrecision for the Gaussian observations      0.489  0.283\nTheta1 for f                                 2.999  1.883\nTheta2 for f                                -2.808 -4.070\n\nDeviance Information Criterion (DIC) ...............: 231.65\nDeviance Information Criterion (DIC, saturated) ....: 71.69\nEffective number of parameters .....................: 16.69\n\nWatanabe-Akaike information criterion (WAIC) ...: 232.14\nEffective number of parameters .................: 14.00\n\nMarginal log-Likelihood:  -145.00 \n is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n```\n:::\n:::\nThat gives nearly the same estimates as from ```INLA```. \n::: {.cell}\n\n```{.r .cell-code}\nmap_prj <- st_transform(map, crs = projMercator)\npredictions1 <- predict(fit, newdata=dp, formula = ~ Intercept + covtemp + covprec + f)\npredictions2 <- predict(fit, newdata=dp, formula = ~ f)\nggplot() +\ngeom_sf(data=predictions1, aes(color=mean)) +\n  scale_colour_gradient(low = \"blue\", high = \"yellow\")\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/plot-field-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Check the contribution of just the spatial field\nggplot() +\ngeom_sf(data=predictions2, aes(color=mean)) +\n  scale_colour_gradient(low = \"blue\", high = \"yellow\")\n```\n\n::: {.cell-output-display}\n![](inla_inlabru_tutorial_netherlands_data_files/figure-html/plot-field-2.png){width=672}\n:::\n:::\nThat concludes this section, showing how to fit spatial model in ```INLA``` and ```inlabru```. There are a few things more to do: simulating data and seeing how well INLA recovers the parameters, and fitting a temporal model in both packages. But I'll leave these for later.",
    "supporting": [
      "inla_inlabru_tutorial_netherlands_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}